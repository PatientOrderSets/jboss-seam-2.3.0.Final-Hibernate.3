# Language mr-IN translations for PACKAGE package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-07-07 16:48+0000\n"
"PO-Revision-Date: 2008-04-04 01:24+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: Text.xml:2
#, no-c-format
msgid "Seam Text"
msgstr ""

#. Tag: para
#: Text.xml:4
#, no-c-format
msgid ""
"Collaboration-oriented websites require a human-friendly markup language for "
"easy entry of formatted text in forum posts, wiki pages, blogs, comments, "
"etc. Seam provides the <literal>&lt;s:formattedText/&gt;</literal> control "
"for display of formatted text that conforms to the <emphasis>Seam Text</"
"emphasis> language. Seam Text is implemented using an ANTLR-based parser. "
"You don't need to know anything about ANTLR to use it, however."
msgstr ""

#. Tag: title
#: Text.xml:13
#, no-c-format
msgid "Basic fomatting"
msgstr ""

#. Tag: para
#: Text.xml:14
#, no-c-format
msgid "Here is a simple example:"
msgstr ""

#. Tag: programlisting
#: Text.xml:18
#, no-c-format
msgid ""
"<![CDATA[It's easy to make *emphasis*, |monospace|,\n"
"~deleted text~, super^scripts^ or _underlines_.]]>"
msgstr ""

#. Tag: para
#: Text.xml:20
#, no-c-format
msgid ""
"If we display this using <literal>&lt;s:formattedText/&gt;</literal>, we "
"will get the following HTML produced:"
msgstr ""

#. Tag: programlisting
#: Text.xml:25
#, no-c-format
msgid ""
"<![CDATA[<p>\n"
"It's easy to make <i>emphasis</i>, <tt>monospace</tt>\n"
"<del>deleted text</del>, super<sup>scripts</sup> or <u>underlines</u>.\n"
"</p>]]>"
msgstr ""

#. Tag: para
#: Text.xml:27
#, no-c-format
msgid ""
"We can use a blank line to indicate a new paragraph, and <literal>+</"
"literal> to indicate a heading:"
msgstr ""

#. Tag: programlisting
#: Text.xml:32
#, no-c-format
msgid ""
"<![CDATA[+This is a big heading\n"
"You /must/ have some text following a heading!\n"
" \n"
"++This is a smaller heading\n"
"This is the first paragraph. We can split it across multiple \n"
"lines, but we must end it with a blank line.\n"
"\n"
"This is the second paragraph.]]>"
msgstr ""

#. Tag: para
#: Text.xml:34
#, no-c-format
msgid ""
"(Note that a simple newline is ignored, you need an additional blank line to "
"wrap text into a new paragraph.) This is the HTML that results:"
msgstr ""

#. Tag: programlisting
#: Text.xml:39
#, no-c-format
msgid ""
"<![CDATA[<h1>This is a big heading</h1>\n"
"<p>\n"
"You <i>must</i> have some text following a heading!\n"
"</p>\n"
" \n"
"<h2>This is a smaller heading</h2>\n"
"<p>\n"
"This is the first paragraph. We can split it across multiple \n"
"lines, but we must end it with a blank line.\n"
"</p>\n"
"\n"
"<p>\n"
"This is the second paragraph.\n"
"</p>]]>"
msgstr ""

#. Tag: para
#: Text.xml:41
#, no-c-format
msgid ""
"Ordered lists are created using the <literal>#</literal> character. "
"Unordered lists use the <literal>=</literal> character:"
msgstr ""

#. Tag: programlisting
#: Text.xml:46
#, no-c-format
msgid ""
"<![CDATA[An ordered list:\n"
"        \n"
"#first item\n"
"#second item\n"
"#and even the /third/ item\n"
"\n"
"An unordered list:\n"
"\n"
"=an item\n"
"=another item]]>"
msgstr ""

#. Tag: programlisting
#: Text.xml:48
#, no-c-format
msgid ""
"<![CDATA[<p>\n"
"An ordered list:\n"
"</p>\n"
" \n"
"<ol>       \n"
"<li>first item</li>\n"
"<li>second item</li>\n"
"<li>and even the <i>third</i> item</li>\n"
"</ol>\n"
"\n"
"<p>\n"
"An unordered list:\n"
"</p>\n"
"\n"
"<ul>\n"
"<li>an item</li>\n"
"<li>another item</li>\n"
"</ul>]]>"
msgstr ""

#. Tag: para
#: Text.xml:50
#, no-c-format
msgid "Quoted sections should be surrounded in double quotes:"
msgstr ""

#. Tag: programlisting
#: Text.xml:54
#, no-c-format
msgid ""
"<![CDATA[The other guy said:\n"
"        \n"
"\"Nyeah nyeah-nee \n"
"/nyeah/ nyeah!\"\n"
"\n"
"But what do you think he means by \"nyeah-nee\"?]]>"
msgstr ""

#. Tag: programlisting
#: Text.xml:56
#, no-c-format
msgid ""
"<![CDATA[<p>\n"
"The other guy said:\n"
"</p>\n"
"        \n"
"<q>Nyeah nyeah-nee\n"
"<i>nyeah</i> nyeah!</q>\n"
"\n"
"<p>\n"
"But what do you think he means by <q>nyeah-nee</q>?\n"
"</p>]]>"
msgstr ""

#. Tag: title
#: Text.xml:61
#, no-c-format
msgid "Entering code and text with special characters"
msgstr ""

#. Tag: para
#: Text.xml:62
#, no-c-format
msgid ""
"Special characters such as <literal>*</literal>, <literal>|</literal> and "
"<literal>#</literal>, along with HTML characters such as <literal>&lt;</"
"literal>, <literal>&gt;</literal> and <literal>&amp;</literal> may be "
"escaped using <literal>\\</literal>:"
msgstr ""

#. Tag: programlisting
#: Text.xml:69
#, no-c-format
msgid ""
"<![CDATA[You can write down equations like 2\\*3\\=6 and HTML tags\n"
"like \\<body\\> using the escape character: \\\\.]]>"
msgstr ""

#. Tag: programlisting
#: Text.xml:71
#, no-c-format
msgid ""
"<![CDATA[<p>\n"
"You can write down equations like 2*3=6 and HTML tags\n"
"like &lt;body&gt; using the escape character: \\.\n"
"</p>]]>"
msgstr ""

#. Tag: para
#: Text.xml:73
#, no-c-format
msgid "And we can quote code blocks using backticks:"
msgstr ""

#. Tag: programlisting
#: Text.xml:77
#, no-c-format
msgid ""
"<![CDATA[My code doesn't work:\n"
"\n"
"`for (int i=0; i<100; i--)\n"
"{\n"
"    doSomething();\n"
"}`\n"
"\n"
"Any ideas?]]>"
msgstr ""

#. Tag: programlisting
#: Text.xml:79
#, no-c-format
msgid ""
"<![CDATA[<p>\n"
"My code doesn't work:\n"
"</p>\n"
"\n"
"<pre>for (int i=0; i&lt;100; i--)\n"
"{\n"
"    doSomething();\n"
"}</pre>\n"
"\n"
"<p>\n"
"Any ideas?\n"
"</p>]]>"
msgstr ""

#. Tag: para
#: Text.xml:81
#, no-c-format
msgid ""
"Note that inline monospace formatting always escapes (most monospace "
"formatted text is in fact code or tags with many special characters). So you "
"can, for example, write:"
msgstr ""

#. Tag: programlisting
#: Text.xml:86
#, no-c-format
msgid "<![CDATA[This is a |<tag attribute=\"value\"/>| example.]]>"
msgstr ""

#. Tag: para
#: Text.xml:88
#, no-c-format
msgid ""
"without escaping any of the characters inside the monospace bars. The "
"downside is that you can't format inline monospace text in any other way "
"(italics, underscore, and so on)."
msgstr ""

#. Tag: title
#: Text.xml:96
#, no-c-format
msgid "Links"
msgstr ""

#. Tag: para
#: Text.xml:98
#, no-c-format
msgid "A link may be created using the following syntax:"
msgstr ""

#. Tag: programlisting
#: Text.xml:102
#, no-c-format
msgid ""
"<![CDATA[Go to the Seam website at [=>http://jboss.org/schema/seam].]]>"
msgstr ""

#. Tag: para
#: Text.xml:104
#, no-c-format
msgid "Or, if you want to specify the text of the link:"
msgstr ""

#. Tag: programlisting
#: Text.xml:108
#, no-c-format
msgid "<![CDATA[Go to [the Seam website=>http://jboss.org/schema/seam].]]>"
msgstr ""

#. Tag: para
#: Text.xml:110
#, no-c-format
msgid ""
"For advanced users, it is even possible to customize the Seam Text parser to "
"understand wikiword links written using this syntax."
msgstr ""

#. Tag: title
#: Text.xml:118
#, no-c-format
msgid "Entering HTML"
msgstr ""

#. Tag: para
#: Text.xml:120
#, no-c-format
msgid ""
"Text may even include a certain limited subset of HTML (don't worry, the "
"subset is chosen to be safe from cross-site scripting attacks). This is "
"useful for creating links:"
msgstr ""

#. Tag: programlisting
#: Text.xml:125
#, no-c-format
msgid ""
"<![CDATA[You might want to link to <a href=\"http://jboss.org/schema/seam"
"\">something\n"
"cool</a>, or even include an image: <img src=\"/logo.jpg\"/>]]>"
msgstr ""

#. Tag: para
#: Text.xml:127
#, no-c-format
msgid "And for creating tables:"
msgstr ""

#. Tag: programlisting
#: Text.xml:131
#, no-c-format
msgid ""
"<![CDATA[<table>\n"
"    <tr><td>First name:</td><td>Gavin</td></tr>\n"
"    <tr><td>Last name:</td><td>King</td></tr>\n"
"</table>]]>"
msgstr ""

#. Tag: para
#: Text.xml:133
#, no-c-format
msgid "But you can do much more if you want!"
msgstr ""

#. Tag: title
#: Text.xml:140
#, no-c-format
msgid "Using the SeamTextParser"
msgstr ""

#. Tag: para
#: Text.xml:142
#, no-c-format
msgid ""
"The <literal>&lt;s:formattedText/&gt;</literal> JSF component internally "
"uses the <literal>org.jboss.seam.text.SeamTextParser</literal>. You can use "
"that class directly and implement your own text parsing, rendering, or HTML "
"sanitation procedure. This is especially useful if you have a custom "
"frontend for entering rich text, such as a Javascript-based HTML editor, and "
"you want to validate user input to protect your website against Cross-Site "
"Scripting (XSS) attacks. Another usecase are custom wiki text parsing and "
"rendering engines."
msgstr ""

#. Tag: para
#: Text.xml:151
#, no-c-format
msgid ""
"The following example defines a custom text parser that overrides the "
"default HTML sanitizer:"
msgstr ""

#. Tag: programlisting
#: Text.xml:155
#, no-c-format
msgid ""
"<![CDATA[public class MyTextParser extends SeamTextParser {\n"
"\n"
"    public MyTextParser(String myText) {\n"
"        super(new SeamTextLexer(new StringReader(myText)));\n"
"\n"
"        setSanitizer(\n"
"            new DefaultSanitizer() {\n"
"                @Override\n"
"                public void validateHtmlElement(Token element) throws "
"SemanticException {\n"
"                    // TODO: I want to validate HTML elements myself!\n"
"                }\n"
"            }\n"
"        );\n"
"    }\n"
"\n"
"    // Customizes rendering of Seam text links such as [Some Text=>http://"
"example.com]\n"
"    @Override\n"
"    protected String linkTag(String descriptionText, String linkText) {\n"
"        return \"<a href=\\\"\" + linkText + \"\\\">My Custom Link: \" + "
"descriptionText + \"</a>\";\n"
"    }\n"
"\n"
"    // Renders a <p> or equivalent tag\n"
"    @Override\n"
"    protected String paragraphOpenTag() {\n"
"        return \"<p class=\\\"myCustomStyle\\\">\";\n"
"    }\n"
"\n"
"    public void parse() throws ANTLRException {\n"
"        startRule();\n"
"    }\n"
"    \n"
"}]]>"
msgstr ""

#. Tag: para
#: Text.xml:157
#, no-c-format
msgid ""
"The <literal>linkTag()</literal> and <literal>paragraphOpenTag()</literal> "
"methods are just some of many you can override to customize rendered output. "
"These methods generally return <literal>String</literal>. See the Javadoc "
"for more details."
msgstr ""

#. Tag: para
#: Text.xml:163
#, no-c-format
msgid ""
"Also consult the Javadoc of <literal>org.jboss.seam.text.SeamTextParser."
"DefaultSanitizer</literal> for more information on what HTML elements, "
"attributes, and attribute values or filtered by default."
msgstr ""
