# translation of Validation.po to Japanese
# Noriko Mizumoto <noriko@redhat.com>, 2007, 2008, 2009.
msgid ""
msgstr ""
"Project-Id-Version: Validation\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-03-22 12:51+0000\n"
"PO-Revision-Date: 2009-03-04 12:40+1000\n"
"Last-Translator: Noriko Mizumoto <noriko@redhat.com>\n"
"Language-Team: Japanese <fedora-trans-ja@redhat.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: Validation.xml:2
#, no-c-format
msgid "JSF form validation in Seam"
msgstr "Seam での JSF フォーム検証"

#. Tag: para
#: Validation.xml:3
#, no-c-format
msgid "In plain JSF, validation is defined in the view:"
msgstr "プレーンな JSF では、 検証はビューで定義されます。"

#. Tag: programlisting
#: Validation.xml:7
#, no-c-format
msgid ""
"<![CDATA[<h:form>\n"
"    <h:messages/>\n"
"\n"
"    <div>\n"
"        Country:\n"
"        <h:inputText value=\"#{location.country}\" required=\"true\">\n"
"            <my:validateCountry/>\n"
"        </h:inputText>\n"
"    </div>\n"
"    \n"
"    <div>\n"
"        Zip code:\n"
"        <h:inputText value=\"#{location.zip}\" required=\"true\">\n"
"            <my:validateZip/>\n"
"        </h:inputText>\n"
"    </div>\n"
"\n"
"    <h:commandButton/>\n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form>\n"
"    <h:messages/>\n"
"\n"
"    <div>\n"
"        Country:\n"
"        <h:inputText value=\"#{location.country}\" required=\"true\">\n"
"            <my:validateCountry/>\n"
"        </h:inputText>\n"
"    </div>\n"
"    \n"
"    <div>\n"
"        Zip code:\n"
"        <h:inputText value=\"#{location.zip}\" required=\"true\">\n"
"            <my:validateZip/>\n"
"        </h:inputText>\n"
"    </div>\n"
"\n"
"    <h:commandButton/>\n"
"</h:form>]]>"

#. Tag: para
#: Validation.xml:9
#, no-c-format
msgid ""
"In practice, this approach usually violates DRY, since most \"validation\" "
"actually enforces constraints that are part of the data model, and exist all "
"the way down to the database schema definition. Seam provides support for "
"model-based constraints defined using Hibernate Validator."
msgstr ""
"実際には、 データモデルの一部であり、 またデータベーススキーマの定義全体にわ"
"たって存在する制約をほとんどの「検証」が強制実行するため、 この方法は通常、 "
"DRY に違反してしまいます。 Seam は Hibernate Validator を使って定義されるモデ"
"ルベースの制約に対するサポートを提供しています。"

#. Tag: para
#: Validation.xml:17
#, no-c-format
msgid ""
"Let's start by defining our constraints, on our <literal>Location</literal> "
"class:"
msgstr ""
"<literal>Location</literal> クラスで制約を定義するところから始めてみます。"

#. Tag: programlisting
#: Validation.xml:22
#, no-c-format
msgid ""
"<![CDATA[public class Location {\n"
"    private String country;\n"
"    private String zip;\n"
"    \n"
"    @NotNull\n"
"    @Length(max=30)\n"
"    public String getCountry() { return country; }\n"
"    public void setCountry(String c) { country = c; }\n"
"\n"
"    @NotNull\n"
"    @Length(max=6)\n"
"    @Pattern(\"^\\d*$\")\n"
"    public String getZip() { return zip; }\n"
"    public void setZip(String z) { zip = z; }\n"
"}]]>"
msgstr ""
"<![CDATA[public class Location {\n"
"    private String country;\n"
"    private String zip;\n"
"    \n"
"    @NotNull\n"
"    @Length(max=30)\n"
"    public String getCountry() { return country; }\n"
"    public void setCountry(String c) { country = c; }\n"
"\n"
"    @NotNull\n"
"    @Length(max=6)\n"
"    @Pattern(\"^\\d*$\")\n"
"    public String getZip() { return zip; }\n"
"    public void setZip(String z) { zip = z; }\n"
"}]]>"

#. Tag: para
#: Validation.xml:24
#, no-c-format
msgid ""
"Well, that's a decent first cut, but in practice it might be more elegant to "
"use custom constraints instead of the ones built into Hibernate Validator:"
msgstr ""
"たしかに上記が正当ですが、 実際には Hibernate Validator に組み込みのものを使"
"わずにカスタムな制約を使う方がスマートかもしれません。"

#. Tag: programlisting
#: Validation.xml:30
#, no-c-format
msgid ""
"<![CDATA[public class Location {\n"
"    private String country;\n"
"    private String zip;\n"
"    \n"
"    @NotNull\n"
"    @Country\n"
"    public String getCountry() { return country; }\n"
"    public void setCountry(String c) { country = c; }\n"
"\n"
"    @NotNull\n"
"    @ZipCode\n"
"    public String getZip() { return zip; }\n"
"    public void setZip(String z) { zip = z; }\n"
"}]]>"
msgstr ""
"<![CDATA[public class Location {\n"
"    private String country;\n"
"    private String zip;\n"
"    \n"
"    @NotNull\n"
"    @Country\n"
"    public String getCountry() { return country; }\n"
"    public void setCountry(String c) { country = c; }\n"
"\n"
"    @NotNull\n"
"    @ZipCode\n"
"    public String getZip() { return zip; }\n"
"    public void setZip(String z) { zip = z; }\n"
"}]]>"

#. Tag: para
#: Validation.xml:32
#, no-c-format
msgid ""
"Whichever route we take, we no longer need to specify the type of validation "
"to be used in the JSF page. Instead, we can use <literal>&lt;s:validate&gt;</"
"literal> to validate against the constraint defined on the model object."
msgstr ""
"いずれの方法をとるにしても、 JSF ページ内で使用される検証のタイプを指定する必"
"要がなくなります。 代わりに、 <literal>&lt;s:validate&gt;</literal> を使って"
"モデルオブジェクトで定義される制約に対して検証を行うことができます。"

#. Tag: programlisting
#: Validation.xml:39
#, no-c-format
msgid ""
"<![CDATA[<h:form>\n"
"    <h:messages/>\n"
"\n"
"    <div>\n"
"        Country:\n"
"        <h:inputText value=\"#{location.country}\" required=\"true\">\n"
"            <s:validate/>\n"
"        </h:inputText>\n"
"    </div>\n"
"    \n"
"    <div>\n"
"        Zip code:\n"
"        <h:inputText value=\"#{location.zip}\" required=\"true\">\n"
"            <s:validate/>\n"
"        </h:inputText>\n"
"    </div>\n"
"    \n"
"    <h:commandButton/>\n"
"\n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form>\n"
"    <h:messages/>\n"
"\n"
"    <div>\n"
"        Country:\n"
"        <h:inputText value=\"#{location.country}\" required=\"true\">\n"
"            <s:validate/>\n"
"        </h:inputText>\n"
"    </div>\n"
"    \n"
"    <div>\n"
"        Zip code:\n"
"        <h:inputText value=\"#{location.zip}\" required=\"true\">\n"
"            <s:validate/>\n"
"        </h:inputText>\n"
"    </div>\n"
"    \n"
"    <h:commandButton/>\n"
"\n"
"</h:form>]]>"

#. Tag: para
#: Validation.xml:41
#, no-c-format
msgid ""
"<emphasis>Note:</emphasis> specifying <literal>@NotNull</literal> on the "
"model does <emphasis>not</emphasis> eliminate the requirement for "
"<literal>required=\"true\"</literal> to appear on the control! This is due "
"to a limitation of the JSF validation architecture."
msgstr ""
"<emphasis>注記:</emphasis> このモデルで <literal>@NotNull</literal> を指定し"
"てもコントロールに出現させるのに <literal>required=\"true\"</literal> が必要"
"なくなるというわけではありません。これは JSF 検証アーキテクチャの限界によるも"
"のです。"

#. Tag: para
#: Validation.xml:48
#, fuzzy, no-c-format
msgid ""
"This approach <emphasis>defines</emphasis> constraints on the model, and "
"<emphasis>presents</emphasis> constraint violations in the view &#8212; a "
"significantly better design."
msgstr ""
"この方法はモデル上の制約を<emphasis>定義</emphasis>し、 ビューで制約違反を "
"<emphasis>表示</emphasis> します &#8212; デザイン性に優れています。"

#. Tag: para
#: Validation.xml:54
#, no-c-format
msgid ""
"However, it is not much less verbose than what we started with, so let's try "
"<literal>&lt;s:validateAll&gt;</literal>:"
msgstr ""
"しかし、 例と比べてそれほど冗長性が軽減されているわけではないので、 "
"<literal>&lt;s:validateAll&gt;</literal> を使ってみます。"

#. Tag: programlisting
#: Validation.xml:59
#, no-c-format
msgid ""
"<![CDATA[<h:form>\n"
"    \n"
"    <h:messages/>\n"
"\n"
"    <s:validateAll>\n"
"\n"
"        <div>\n"
"            Country:\n"
"            <h:inputText value=\"#{location.country}\" required=\"true\"/>\n"
"        </div>\n"
"\n"
"        <div>\n"
"            Zip code:\n"
"            <h:inputText value=\"#{location.zip}\" required=\"true\"/>\n"
"        </div>\n"
"\n"
"        <h:commandButton/>\n"
"\n"
"    </s:validateAll>\n"
"\n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form>\n"
"    \n"
"    <h:messages/>\n"
"\n"
"    <s:validateAll>\n"
"\n"
"        <div>\n"
"            Country:\n"
"            <h:inputText value=\"#{location.country}\" required=\"true\"/>\n"
"        </div>\n"
"\n"
"        <div>\n"
"            Zip code:\n"
"            <h:inputText value=\"#{location.zip}\" required=\"true\"/>\n"
"        </div>\n"
"\n"
"        <h:commandButton/>\n"
"\n"
"    </s:validateAll>\n"
"\n"
"</h:form>]]>"

#. Tag: para
#: Validation.xml:61
#, no-c-format
msgid ""
"This tag simply adds an <literal>&lt;s:validate&gt;</literal> to every input "
"in the form. For a large form, it can save a lot of typing!"
msgstr ""
"このタグは単純に <literal>&lt;s:validate&gt;</literal> をフォーム内のすべての"
"入力に追加します。 フォームが大きくなる場合は、 入力の手間をかなり省くことが"
"できることになります。"

#. Tag: para
#: Validation.xml:67
#, no-c-format
msgid ""
"Now we need to do something about displaying feedback to the user when "
"validation fails. Currently we are displaying all messages at the top of the "
"form. In order for the user to correlate the message with an input, you need "
"to define a label using the standard <literal>label</literal> attribute on "
"the input component."
msgstr ""
"ここで、 検証が失敗した場合にユーザーに対してフィードバックを表示させるために"
"何らかの手を打たなければなりません。 現在、 すべてのメッセージはフォームの冒"
"頭で表示しています。 ユーザーがメッセージと入力を関連付けられるようにするた"
"め、 入力コンポーネントで標準の <literal>label</literal> 属性を使いラベルを定"
"義する必要があります。"

#. Tag: programlisting
#: Validation.xml:73
#, no-c-format
msgid ""
"<![CDATA[<h:inputText value=\"#{location.zip}\" required=\"true\" label="
"\"Zip:\">\n"
"    <s:validate/>\n"
"</h:inputText>]]>"
msgstr ""
"<![CDATA[<h:inputText value=\"#{location.zip}\" required=\"true\" label="
"\"Zip:\">\n"
"    <s:validate/>\n"
"</h:inputText>]]>"

#. Tag: para
#: Validation.xml:75
#, no-c-format
msgid ""
"You can then inject this value into the message string using the placeholder "
"{0} (the first and only parameter passed to a JSF message for a Hiberate "
"Validator restriction). See the internationalization section for more "
"information regarding where to define these messages."
msgstr ""
"次にプレースホルダーの {0} を使ってこの値をメッセージ文字列にインジェクトする"
"ことができます (Hiberate Validator の制約用に JSF メッセージに渡される最初で"
"唯一のパラメータ)。 これらのメッセージを定義する場所については国際化 "
"(Internationalization) のセクションをご覧ください。"

#. Tag: programlisting
#: Validation.xml:83
#, no-c-format
msgid "validator.length={0} length must be between {min} and {max}"
msgstr "validator.length={0} 長さは {min} と {max} の間でなければなりません"

#. Tag: para
#: Validation.xml:85
#, no-c-format
msgid ""
"What we would really like to do, though, is display the message next to the "
"field with the error (this is possible in plain JSF), highlight the field "
"and label (this is not possible) and, for good measure, display some image "
"next to the field (also not possible). We also want to display a little "
"colored asterisk next to the label for each required form field. Using this "
"approach, the identifying label is not necessary."
msgstr ""
"実際に行いたいのは、 エラーを付けてフィールドのとなりにメッセージを表示 (プ"
"レーン JSF で可能)、 フィールドとラベルをハイライトさせて (これは不可能)、 つ"
"いでにフィールドのとなりに何かイメージを表示させる (これも不可能) ことです。 "
"また、 必須事項の各フィールドにはラベルのとなりに色の付いたアスタリスクを表示"
"させたいとします。 これを行うのにラベルを識別する必要はありません。"

#. Tag: para
#: Validation.xml:95
#, no-c-format
msgid ""
"That's quite a lot of functionality we need for each field of our form. We "
"wouldn't want to have to specify higlighting and the layout of the image, "
"message and input field for every field on the form. So, instead, we'll "
"specify the common layout in a facelets template:"
msgstr ""
"フォームの各フィールドに対してかなり多くの機能を必要としています。 フォームに"
"あるすべてのフィールドそれぞれに対してイメージ、メッセージ、入力フィールドの"
"レイアウトやハイライトを指定したいとは思わないでしょうから、 代わりに "
"facelets テンプレートで共通のレイアウトを指定します。"

#. Tag: programlisting
#: Validation.xml:103
#, no-c-format
msgid ""
"<![CDATA[<ui:composition xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"                xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
"                xmlns:h=\"http://java.sun.com/jsf/html\"\n"
"                xmlns:f=\"http://java.sun.com/jsf/core\"\n"
"                xmlns:s=\"http://jboss.org/schema/seam/taglib\">\n"
"                 \n"
"    <div>\n"
"    \n"
"        <s:label styleClass=\"#{invalid?'error':''}\">\n"
"            <ui:insert name=\"label\"/>\n"
"            <s:span styleClass=\"required\" rendered=\"#{required}\">*</s:"
"span>\n"
"        </s:label>\n"
"        \n"
"        <span class=\"#{invalid?'error':''}\">\n"
"            <h:graphicImage value=\"/img/error.gif\" rendered=\"#{invalid}\"/"
">\n"
"            <s:validateAll>\n"
"                <ui:insert/>\n"
"            </s:validateAll>\n"
"        </span>\n"
"        \n"
"        <s:message styleClass=\"error\"/>\n"
"        \n"
"    </div>\n"
"    \n"
"</ui:composition>]]>"
msgstr ""
"<![CDATA[<ui:composition xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"                xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
"                xmlns:h=\"http://java.sun.com/jsf/html\"\n"
"                xmlns:f=\"http://java.sun.com/jsf/core\"\n"
"                xmlns:s=\"http://jboss.org/schema/seam/taglib\">\n"
"                 \n"
"    <div>\n"
"    \n"
"        <s:label styleClass=\"#{invalid?'error':''}\">\n"
"            <ui:insert name=\"label\"/>\n"
"            <s:span styleClass=\"required\" rendered=\"#{required}\">*</s:"
"span>\n"
"        </s:label>\n"
"        \n"
"        <span class=\"#{invalid?'error':''}\">\n"
"            <h:graphicImage value=\"/img/error.gif\" rendered=\"#{invalid}\"/"
">\n"
"            <s:validateAll>\n"
"                <ui:insert/>\n"
"            </s:validateAll>\n"
"        </span>\n"
"        \n"
"        <s:message styleClass=\"error\"/>\n"
"        \n"
"    </div>\n"
"    \n"
"</ui:composition>]]>"

#. Tag: para
#: Validation.xml:105
#, no-c-format
msgid ""
"We can include this template for each of our form fields using <literal>&lt;"
"s:decorate&gt;</literal>."
msgstr ""
"<literal>&lt;s:decorate&gt;</literal> を使って各フォームフィールドにこのテン"
"プレートを含ませることができます。"

#. Tag: programlisting
#: Validation.xml:110
#, no-c-format
msgid ""
"<![CDATA[<h:form>\n"
"\n"
"    <h:messages globalOnly=\"true\"/>\n"
"\n"
"    <s:decorate template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Country:</ui:define>\n"
"        <h:inputText value=\"#{location.country}\" required=\"true\"/>\n"
"    </s:decorate>\n"
"    \n"
"    <s:decorate template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Zip code:</ui:define>\n"
"        <h:inputText value=\"#{location.zip}\" required=\"true\"/>\n"
"    </s:decorate>\n"
"\n"
"    <h:commandButton/>\n"
"\n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form>\n"
"\n"
"    <h:messages globalOnly=\"true\"/>\n"
"\n"
"    <s:decorate template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Country:</ui:define>\n"
"        <h:inputText value=\"#{location.country}\" required=\"true\"/>\n"
"    </s:decorate>\n"
"    \n"
"    <s:decorate template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Zip code:</ui:define>\n"
"        <h:inputText value=\"#{location.zip}\" required=\"true\"/>\n"
"    </s:decorate>\n"
"\n"
"    <h:commandButton/>\n"
"\n"
"</h:form>]]>"

#. Tag: para
#: Validation.xml:112
#, no-c-format
msgid ""
"Finally, we can use RichFaces Ajax to display validation messages as the "
"user is navigating around the form:"
msgstr ""
"最後に、 ユーザーがフォーム内を行ったり来たりするのに応じて RichFaces Ajax を"
"使って検証メッセージを表示させることができます。"

#. Tag: programlisting
#: Validation.xml:117
#, no-c-format
msgid ""
"<![CDATA[<h:form>\n"
"\n"
"    <h:messages globalOnly=\"true\"/>\n"
"\n"
"    <s:decorate id=\"countryDecoration\" template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Country:</ui:define>\n"
"        <h:inputText value=\"#{location.country}\" required=\"true\">\n"
"            <a:support event=\"onblur\" reRender=\"countryDecoration\" "
"bypassUpdates=\"true\"/>\n"
"        </h:inputText>\n"
"    </s:decorate>\n"
"    \n"
"    <s:decorate id=\"zipDecoration\" template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Zip code:</ui:define>\n"
"        <h:inputText value=\"#{location.zip}\" required=\"true\">\n"
"            <a:support event=\"onblur\" reRender=\"zipDecoration\" "
"bypassUpdates=\"true\"/>\n"
"        </h:inputText>\n"
"    </s:decorate>\n"
"\n"
"    <h:commandButton/>\n"
"\n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form>\n"
"\n"
"    <h:messages globalOnly=\"true\"/>\n"
"\n"
"    <s:decorate id=\"countryDecoration\" template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Country:</ui:define>\n"
"        <h:inputText value=\"#{location.country}\" required=\"true\">\n"
"            <a:support event=\"onblur\" reRender=\"countryDecoration\" "
"bypassUpdates=\"true\"/>\n"
"        </h:inputText>\n"
"    </s:decorate>\n"
"    \n"
"    <s:decorate id=\"zipDecoration\" template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Zip code:</ui:define>\n"
"        <h:inputText value=\"#{location.zip}\" required=\"true\">\n"
"            <a:support event=\"onblur\" reRender=\"zipDecoration\" "
"bypassUpdates=\"true\"/>\n"
"        </h:inputText>\n"
"    </s:decorate>\n"
"\n"
"    <h:commandButton/>\n"
"\n"
"</h:form>]]>"

#. Tag: para
#: Validation.xml:119
#, no-c-format
msgid ""
"It's better style to define explicit ids for important controls on the page, "
"especially if you want to do automated testing for the UI, using some "
"toolkit like Selenium. If you don't provide explicit ids, JSF will generate "
"them, but the generated values will change if you change anything on the "
"page."
msgstr ""
"ページ上の重要なコントロールに明示的な ID を定義することは好ましいスタイルで"
"す。 特に UI 用の自動テストを Selenium などのツールキットを使用して行いたい場"
"合に適しています。 明示的な ID を与えないと、 JSF はそれらを生成しますがペー"
"ジ上で変更があると生成された値が変化します。"

#. Tag: programlisting
#: Validation.xml:128
#, no-c-format
msgid ""
"<![CDATA[<h:form id=\"form\">\n"
"\n"
"    <h:messages globalOnly=\"true\"/>\n"
"\n"
"    <s:decorate id=\"countryDecoration\" template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Country:</ui:define>\n"
"        <h:inputText id=\"country\" value=\"#{location.country}\" required="
"\"true\">\n"
"            <a:support event=\"onblur\" reRender=\"countryDecoration\" "
"bypassUpdates=\"true\"/>\n"
"        </h:inputText>\n"
"    </s:decorate>\n"
"    \n"
"    <s:decorate id=\"zipDecoration\" template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Zip code:</ui:define>\n"
"        <h:inputText id=\"zip\" value=\"#{location.zip}\" required=\"true"
"\">\n"
"            <a:support event=\"onblur\" reRender=\"zipDecoration\" "
"bypassUpdates=\"true\"/>\n"
"        </h:inputText>\n"
"    </s:decorate>\n"
"\n"
"    <h:commandButton/>\n"
"\n"
"</h:form>]]>"
msgstr ""
"<![CDATA[<h:form id=\"form\">\n"
"\n"
"    <h:messages globalOnly=\"true\"/>\n"
"\n"
"    <s:decorate id=\"countryDecoration\" template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Country:</ui:define>\n"
"        <h:inputText id=\"country\" value=\"#{location.country}\" required="
"\"true\">\n"
"            <a:support event=\"onblur\" reRender=\"countryDecoration\" "
"bypassUpdates=\"true\"/>\n"
"        </h:inputText>\n"
"    </s:decorate>\n"
"    \n"
"    <s:decorate id=\"zipDecoration\" template=\"edit.xhtml\">\n"
"        <ui:define name=\"label\">Zip code:</ui:define>\n"
"        <h:inputText id=\"zip\" value=\"#{location.zip}\" required=\"true"
"\">\n"
"            <a:support event=\"onblur\" reRender=\"zipDecoration\" "
"bypassUpdates=\"true\"/>\n"
"        </h:inputText>\n"
"    </s:decorate>\n"
"\n"
"    <h:commandButton/>\n"
"\n"
"</h:form>]]>"

#. Tag: para
#: Validation.xml:130
#, no-c-format
msgid ""
"And what if you want to specify a different message to be displayed when "
"validation fails? You can use the Seam message bundle (and all it's goodies "
"like el expressions inside the message, and per-view message bundles) with "
"the Hibernate Validator:"
msgstr ""
"検証が失敗したときに表示させるメッセージを変えたい場合はどうでしょう。 Seam "
"メッセージバンドル (およびメッセージ中の EL 式やビューごとのメッセージバンド"
"ルなど優れたものすべて) を Hibernate Validator で使用することができます。"

#. Tag: programlisting
#: Validation.xml:137
#, no-c-format
msgid ""
"<![CDATA[public class Location {\n"
"    private String name;\n"
"    private String zip;\n"
"    \n"
"    // Getters and setters for name\n"
"\n"
"    @NotNull\n"
"    @Length(max=6)\n"
"    @ZipCode(message=\"#{messages['location.zipCode.invalid']}\")\n"
"    public String getZip() { return zip; }\n"
"    public void setZip(String z) { zip = z; }\n"
"}]]>"
msgstr ""
"<![CDATA[public class Location {\n"
"    private String name;\n"
"    private String zip;\n"
"    \n"
"    // Getters and setters for name\n"
"\n"
"    @NotNull\n"
"    @Length(max=6)\n"
"    @ZipCode(message=\"#{messages['location.zipCode.invalid']}\")\n"
"    public String getZip() { return zip; }\n"
"    public void setZip(String z) { zip = z; }\n"
"}]]>"

#. Tag: programlisting
#: Validation.xml:139
#, no-c-format
msgid ""
"location.zipCode.invalid = The zip code is not valid for #{location.name}"
msgstr ""
"location.zipCode.invalid = #{location.name} に対する有効な郵便番号ではありま"
"せん"
