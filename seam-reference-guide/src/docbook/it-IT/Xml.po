# Language it-IT translations for PACKAGE package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-11 07:43+0000\n"
"PO-Revision-Date: 2009-06-14 14:48+0100\n"
"Last-Translator: Nicola Benaglia <nico.benaz@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: Xml.xml:6
#, no-c-format
msgid "Configuring Seam components"
msgstr "Configurare i componenti Seam"

#. Tag: para
#: Xml.xml:8
#, no-c-format
msgid "The philosophy of minimizing XML-based configuration is extremely strong in Seam. Nevertheless, there are various reasons why we might want to configure a Seam component using XML: to isolate deployment-specific information from the Java code, to enable the creation of re-usable frameworks, to configure Seam's built-in functionality, etc. Seam provides two basic approaches to configuring components: configuration via property settings in a properties file or in <literal>web.xml</literal>, and configuration via <literal>components.xml</literal>."
msgstr "La filosofia di minimizzare la configurazione basata su XML è estremamente forte in Seam. Tuttavia ci sono varie ragioni per configurare i componenti Seam tramite XML: per isolare le informazioni specifiche del deploy dal codice Java, per abilitare la creazione di framework riutilizzabili, per configurare le funzionalità predefinite di Seam, ecc. Seam fornisce due approcci base per configurare i componenti: configurazione tramite impostazioni di proprietà in un file di proprietà o in <literal>web.xml</literal>, e configurazione tramite <literal>components.xml</literal>."

#. Tag: title
#: Xml.xml:18
#, no-c-format
msgid "Configuring components via property settings"
msgstr "Configurare i componenti tramite impostazioni di proprietà"

#. Tag: para
#: Xml.xml:19
#, no-c-format
msgid "Seam components may be provided with configuration properties either via servlet context parameters, via system properties, or via a properties file named <literal>seam.properties</literal> in the root of the classpath."
msgstr "I componenti Seam possono essere accompagnati da proprietà di configurazioni o via parametri di contesto servlet oppure tramite un file di proprietà chiamato <literal>seam.properties</literal> collocato nella radice del classpath."

#. Tag: para
#: Xml.xml:23
#, no-c-format
msgid "The configurable Seam component must expose JavaBeans-style property setter methods for the configurable attributes. If a Seam component named <literal>com.jboss.myapp.settings</literal> has a setter method named <literal>setLocale()</literal>, we can provide a property named <literal>com.jboss.myapp.settings.locale</literal> in the <literal>seam.properties</literal> file, a system property named <literal>org.jboss.seam.properties.com.jboss.myapp.settings.locale</literal> via -D at startup, or as a servlet context parameter, and Seam will set the value of the <literal>locale</literal> attribute whenever it instantiates the component."
msgstr "Il componente Seam configurabile deve esporre metodi setter in stile JavaBeans per gli attributi configurabili. Se un componente Seam chiamato <literal>com.jboss.myapp.settings</literal> ha un metodo setter chiamato <literal>setLocale()</literal>, si può scrivere una proprietà chiamata <literal>com.jboss.myapp.settings.locale</literal> nel file <literal>seam.properties</literal> o come parametro di contesto servlet, e Seam imposterà il valore dell'attributo <literal>locale</literal> quando istanzia il componente."

#. Tag: para
#: Xml.xml:32
#, no-c-format
msgid "The same mechanism is used to configure Seam itself. For example, to set the conversation timeout, we provide a value for <literal>org.jboss.seam.core.manager.conversationTimeout</literal> in <literal>web.xml</literal>, <literal>seam.properties</literal>, or via a system property prefixed with <literal>org.jboss.seam.properties</literal>. (There is a built-in Seam component named <literal>org.jboss.seam.core.manager</literal> with a setter method named <literal>setConversationTimeout()</literal>.)"
msgstr "Lo stesso meccanismo viene usato per configurare lo stesso Seam. Per esempio, per impostare il timeout della conversazione, si fornisce un valore a <literal>org.jboss.seam.core.manager.conversationTimeout</literal> in <literal>web.xml</literal> oppure in <literal>seam.properties</literal>. (C'è un componente Seam predefinito chiamato <literal>org.jboss.seam.core.manager</literal> con metodo setter chiamato <literal>setConversationTimeout()</literal>.)"

#. Tag: title
#: Xml.xml:43
#, no-c-format
msgid "Configuring components via <literal>components.xml</literal>"
msgstr "Configurazione dei componenti tramite <literal>components.xml</literal>"

#. Tag: para
#: Xml.xml:45
#, no-c-format
msgid "The <literal>components.xml</literal> file is a bit more powerful than property settings. It lets you:"
msgstr "Il file <literal>components.xml</literal> è un poco più potente delle impostazioni di proprietà. Esso consente di:"

#. Tag: para
#: Xml.xml:52
#, no-c-format
msgid "Configure components that have been installed automatically &#8212; including both built-in components, and application components that have been annotated with the <literal>@Name</literal> annotation and picked up by Seam's deployment scanner."
msgstr "Configurare i componenti installati automaticamente &#8212; inclusi entrambi i componenti predefiniti ed i componenti di applicazione che sono stati annotati con l'annotazione <literal>@Name</literal> e rilevati dallo scanner di deploy di Seam."

#. Tag: para
#: Xml.xml:57
#, no-c-format
msgid "Install classes with no <literal>@Name</literal> annotation as Seam components &#8212; this is most useful for certain kinds of infrastructural components which can be installed multiple times with different names (for example Seam-managed persistence contexts)."
msgstr "Installare le classi senza annotazione <literal>@Name</literal> come componenti Seam &#8212; questo è ancora più utile per alcuni tipi di componenti infrastrutturali che possono essere installati diverse volte con diversi nomi (per esempio i contesti di persistenza gestiti da Seam)."

#. Tag: para
#: Xml.xml:62
#, no-c-format
msgid "Install components that <emphasis>do</emphasis> have a <literal>@Name</literal> annotation but are not installed by default because of an <literal>@Install</literal> annotation that indicates the component should not be installed."
msgstr "Installare componenti che <emphasis>hanno</emphasis> un'annotazione <literal>@Name</literal>, ma non vengono installati di default poiché una annotazione <literal>@Install</literal> indica che non devono essere installati."

#. Tag: para
#: Xml.xml:67
#, no-c-format
msgid "Override the scope of a component."
msgstr "Override dello scope di un componente"

#. Tag: para
#: Xml.xml:71
#, no-c-format
msgid "A <literal>components.xml</literal> file may appear in one of three different places:"
msgstr "Un file <literal>components.xml</literal> può apparire in una delle tre seguenti posizioni:"

#. Tag: para
#: Xml.xml:77
#, no-c-format
msgid "The <literal>WEB-INF</literal> directory of a <literal>war</literal>."
msgstr "Nella directory <literal>WEB-INF</literal> di un file <literal>war</literal>."

#. Tag: para
#: Xml.xml:80
#, no-c-format
msgid "The <literal>META-INF</literal> directory of a <literal>jar</literal>."
msgstr "Nella directory <literal>META-INF</literal> di un file <literal>jar</literal>."

#. Tag: para
#: Xml.xml:83
#, no-c-format
msgid "Any directory of a <literal>jar</literal> that contains classes with an <literal>@Name</literal> annotation."
msgstr "In una qualsiasi directory di un file <literal>jar</literal> che contenga classi con annotazione <literal>@Name</literal>."

#. Tag: para
#: Xml.xml:90
#, no-c-format
msgid "Usually, Seam components are installed when the deployment scanner discovers a class with a <literal>@Name</literal> annotation sitting in an archive with a <literal>seam.properties</literal> file or a <literal>META-INF/components.xml</literal> file. (Unless the component has an <literal>@Install</literal> annotation indicating it should not be installed by default.) The <literal>components.xml</literal> file lets us handle special cases where we need to override the annotations."
msgstr "Solitamente i componenti Seam vengono installati quando lo scanner di deploy scopre una classe con una annotazione <literal>@Name</literal> collocata in un archivio con un file <literal>seam.properties</literal> o un file <literal>META-INF/components.xml</literal>. (Amenoché il componente abbia una annotazione <literal>@Install</literal> che indichi che non debba essere installato di default). Il file <literal>components.xml</literal> consente di gestire i casi speciali in cui occorra fare override delle annotazioni."

#. Tag: para
#: Xml.xml:99
#, no-c-format
msgid "For example, the following <literal>components.xml</literal> file installs jBPM:"
msgstr "Per esempio, il seguente file <literal>components.xml</literal> installa jBPM:"

#. Tag: programlisting
#: Xml.xml:103
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\" \n"
"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"            xmlns:bpm=\"http://jboss.org/schema/seam/bpm\">\n"
"    <bpm:jbpm/>\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\" \n"
"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"            xmlns:bpm=\"http://jboss.org/schema/seam/bpm\">\n"
"    <bpm:jbpm/>\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:105
#, no-c-format
msgid "This example does the same thing:"
msgstr "Questo esempio fa la stessa cosa:"

#. Tag: programlisting
#: Xml.xml:109
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"    <component class=\"org.jboss.seam.bpm.Jbpm\"/>\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"    <component class=\"org.jboss.seam.bpm.Jbpm\"/>\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:111
#, no-c-format
msgid "This one installs and configures two different Seam-managed persistence contexts:"
msgstr "Questo installa e configura due differenti contesti di persistenza gestiti da Seam:"

#. Tag: programlisting
#: Xml.xml:115
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\" \n"
"            xmlns:persistence=\"http://jboss.org/schema/seam/persistence\"\n"
"\n"
"    <persistence:managed-persistence-context name=\"customerDatabase\"\n"
"                       persistence-unit-jndi-name=\"java:/customerEntityManagerFactory\"/>\n"
"        \n"
"    <persistence:managed-persistence-context name=\"accountingDatabase\"\n"
"                       persistence-unit-jndi-name=\"java:/accountingEntityManagerFactory\"/>            \n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\" \n"
"            xmlns:persistence=\"http://jboss.org/schema/seam/persistence\"\n"
"\n"
"    <persistence:managed-persistence-context name=\"customerDatabase\"\n"
"                       persistence-unit-jndi-name=\"java:/customerEntityManagerFactory\"/>\n"
"        \n"
"    <persistence:managed-persistence-context name=\"accountingDatabase\"\n"
"                       persistence-unit-jndi-name=\"java:/accountingEntityManagerFactory\"/>            \n"
"\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:117
#, no-c-format
msgid "As does this one:"
msgstr "Ed anche questo fa lo stesso:"

#. Tag: programlisting
#: Xml.xml:121
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"    <component name=\"customerDatabase\" \n"
"              class=\"org.jboss.seam.persistence.ManagedPersistenceContext\">\n"
"        <property name=\"persistenceUnitJndiName\">java:/customerEntityManagerFactory</property>\n"
"    </component>\n"
"    \n"
"    <component name=\"accountingDatabase\"\n"
"              class=\"org.jboss.seam.persistence.ManagedPersistenceContext\">\n"
"        <property name=\"persistenceUnitJndiName\">java:/accountingEntityManagerFactory</property>\n"
"    </component>\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"    <component name=\"customerDatabase\" \n"
"              class=\"org.jboss.seam.persistence.ManagedPersistenceContext\">\n"
"        <property name=\"persistenceUnitJndiName\">java:/customerEntityManagerFactory</property>\n"
"    </component>\n"
"    \n"
"    <component name=\"accountingDatabase\"\n"
"              class=\"org.jboss.seam.persistence.ManagedPersistenceContext\">\n"
"        <property name=\"persistenceUnitJndiName\">java:/accountingEntityManagerFactory</property>\n"
"    </component>\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:123
#, no-c-format
msgid "This example creates a session-scoped Seam-managed persistence context (this is not recommended in practice):"
msgstr "Questo esempio crea un contesto di persistenza gestito da Seam con scope di sessione (questa non è una pratica raccomandata):"

#. Tag: programlisting
#: Xml.xml:128
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\" \n"
"            xmlns:persistence=\"http://jboss.org/schema/seam/persistence\"\n"
"\n"
"  <persistence:managed-persistence-context name=\"productDatabase\" \n"
"                                          scope=\"session\"\n"
"                     persistence-unit-jndi-name=\"java:/productEntityManagerFactory\"/>        \n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\" \n"
"            xmlns:persistence=\"http://jboss.org/schema/seam/persistence\"\n"
"\n"
"  <persistence:managed-persistence-context name=\"productDatabase\" \n"
"                                          scope=\"session\"\n"
"                     persistence-unit-jndi-name=\"java:/productEntityManagerFactory\"/>        \n"
"\n"
"</components>]]>"

#. Tag: programlisting
#: Xml.xml:130
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"            \n"
"    <component name=\"productDatabase\"\n"
"              scope=\"session\"\n"
"              class=\"org.jboss.seam.persistence.ManagedPersistenceContext\">\n"
"        <property name=\"persistenceUnitJndiName\">java:/productEntityManagerFactory</property>\n"
"    </component>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"            \n"
"    <component name=\"productDatabase\"\n"
"              scope=\"session\"\n"
"              class=\"org.jboss.seam.persistence.ManagedPersistenceContext\">\n"
"        <property name=\"persistenceUnitJndiName\">java:/productEntityManagerFactory</property>\n"
"    </component>\n"
"\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:132
#, no-c-format
msgid "It is common to use the <literal>auto-create</literal> option for infrastructural objects like persistence contexts, which saves you from having to explicitly specify <literal>create=true</literal> when you use the <literal>@In</literal> annotation."
msgstr "E' comune utilizzare l'opzione <literal>auto-create</literal> per gli oggetti infrastrutturali quali i contesti di persistenza, che risparmia dal dovere specificare esplicitamente <literal>create=true</literal> quando si usa l'annotazione <literal>@In</literal>."

#. Tag: programlisting
#: Xml.xml:139
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\" \n"
"            xmlns:persistence=\"http://jboss.org/schema/seam/persistence\"\n"
"\n"
"  <persistence:managed-persistence-context name=\"productDatabase\" \n"
"                                    auto-create=\"true\"\n"
"                     persistence-unit-jndi-name=\"java:/productEntityManagerFactory\"/>        \n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\" \n"
"            xmlns:persistence=\"http://jboss.org/schema/seam/persistence\"\n"
"\n"
"  <persistence:managed-persistence-context name=\"productDatabase\" \n"
"                                    auto-create=\"true\"\n"
"                     persistence-unit-jndi-name=\"java:/productEntityManagerFactory\"/>        \n"
"\n"
"</components>]]>"

#. Tag: programlisting
#: Xml.xml:141
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"            \n"
"    <component name=\"productDatabase\"\n"
"        auto-create=\"true\"\n"
"              class=\"org.jboss.seam.persistence.ManagedPersistenceContext\">\n"
"        <property name=\"persistenceUnitJndiName\">java:/productEntityManagerFactory</property>\n"
"    </component>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"            \n"
"    <component name=\"productDatabase\"\n"
"        auto-create=\"true\"\n"
"              class=\"org.jboss.seam.persistence.ManagedPersistenceContext\">\n"
"        <property name=\"persistenceUnitJndiName\">java:/productEntityManagerFactory</property>\n"
"    </component>\n"
"\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:143
#, no-c-format
msgid "The <literal>&lt;factory&gt;</literal> declaration lets you specify a value or method binding expression that will be evaluated to initialize the value of a context variable when it is first referenced."
msgstr "La dichiarazione <literal>&lt;factory&gt;</literal> consente di specificare un valore o un'espressione di method binding che verrà valutata per inizializzare il valore di una variabile di contesto quando viene referenziata la prima volta."

#. Tag: programlisting
#: Xml.xml:149
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"\n"
"    <factory name=\"contact\" method=\"#{contactManager.loadContact}\" scope=\"CONVERSATION\"/>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"\n"
"    <factory name=\"contact\" method=\"#{contactManager.loadContact}\" scope=\"CONVERSATION\"/>\n"
"\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:151
#, no-c-format
msgid "You can create an \"alias\" (a second name) for a Seam component like so:"
msgstr "Si può creare un \"alias\" (un secondo nome) per un componente Seam in questo modo:"

#. Tag: programlisting
#: Xml.xml:155
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"\n"
"    <factory name=\"user\" value=\"#{actor}\" scope=\"STATELESS\"/>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"\n"
"    <factory name=\"user\" value=\"#{actor}\" scope=\"STATELESS\"/>\n"
"\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:157
#, no-c-format
msgid "You can even create an \"alias\" for a commonly used expression:"
msgstr "Si può anche creare un \"alias\" per un'espressione comunemente usata:"

#. Tag: programlisting
#: Xml.xml:161
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"\n"
"    <factory name=\"contact\" value=\"#{contactManager.contact}\" scope=\"STATELESS\"/>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"\n"
"    <factory name=\"contact\" value=\"#{contactManager.contact}\" scope=\"STATELESS\"/>\n"
"\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:163
#, no-c-format
msgid "It is especially common to see the use of <literal>auto-create=\"true\"</literal> with the <literal>&lt;factory&gt;</literal> declaration:"
msgstr "E' comune vedere usato <literal>auto-create=\"true\"</literal> con la dichiarazione <literal>&lt;factory&gt;</literal>:"

#. Tag: programlisting
#: Xml.xml:168
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"\n"
"    <factory name=\"session\" value=\"#{entityManager.delegate}\" scope=\"STATELESS\" auto-create=\"true\"/>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"\n"
"    <factory name=\"session\" value=\"#{entityManager.delegate}\" scope=\"STATELESS\" auto-create=\"true\"/>\n"
"\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:170
#, no-c-format
msgid "Sometimes we want to reuse the same <literal>components.xml</literal> file with minor changes during both deployment and testing. Seam lets you place wildcards of the form <literal>@wildcard@</literal> in the <literal>components.xml</literal> file which can be replaced either by your Ant build script (at deployment time) or by providing a file named <literal>components.properties</literal> in the classpath (at development time). You'll see this approach used in the Seam examples."
msgstr "A volte si vuole riutilizzare lo stesso file <literal>components.xml</literal> con piccoli cambiamenti durante il deploy ed il testing. Seam consente di mettere dei wildcard della forma <literal>@wildcard@</literal> nel file <literal>components.xml</literal> che può essere rimpiazzato o dallo script Ant (a deployment time) o fornendo un file chiamato <literal>components.properties</literal> nel classpath (a development time). Si vedrà usato quest'ultimo approccio negli esempi di Seam."

#. Tag: title
#: Xml.xml:181
#, no-c-format
msgid "Fine-grained configuration files"
msgstr "File di configurazione a grana fine"

#. Tag: para
#: Xml.xml:182
#, no-c-format
msgid "If you have a large number of components that need to be configured in XML, it makes much more sense to split up the information in <literal>components.xml</literal> into many small files. Seam lets you put configuration for a class named, for example, <literal>com.helloworld.Hello</literal> in a resource named <literal>com/helloworld/Hello.component.xml</literal>. (You might be familiar with this pattern, since it is the same one we use in Hibernate.) The root element of the file may be either a <literal>&lt;components&gt;</literal> or <literal>&lt;component&gt;</literal> element."
msgstr "Qualora si abbia un grande numero di componenti che devono essere configurati in XML, è più sensato suddividere l'informazione di <literal>components.xml</literal> in numerosi piccoli file. Seam consente di mettere la configurazione per una classe non anonima, per esempio, <literal>com.helloworld.Hello</literal> in una risorsa chiamata <literal>com/helloworld/Hello.component.xml</literal>. (Potresti essere familiare a questo pattern, poiché è lo stesso usato da Hibernate.) L'elemento radice del file può essere o un elemento <literal>&lt;components&gt;</literal> oppure <literal>&lt;component&gt;</literal>."

#. Tag: para
#: Xml.xml:191
#, no-c-format
msgid "The first option lets you define multiple components in the file:"
msgstr "La prima opzione lascia definire nel file componenti multipli:"

#. Tag: programlisting
#: Xml.xml:195
#, no-c-format
msgid ""
"<![CDATA[<components>\n"
"    <component class=\"com.helloworld.Hello\" name=\"hello\">\n"
"        <property name=\"name\">#{user.name}</property>\n"
"    </component>\n"
"    <factory name=\"message\" value=\"#{hello.message}\"/>\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components>\n"
"    <component class=\"com.helloworld.Hello\" name=\"hello\">\n"
"        <property name=\"name\">#{user.name}</property>\n"
"    </component>\n"
"    <factory name=\"message\" value=\"#{hello.message}\"/>\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:197
#, no-c-format
msgid "The second option only lets you define or configure one component, but is less noisy:"
msgstr "La seconda opzione lascia definire o configurare un solo componente, ma è meno rumorosa:"

#. Tag: programlisting
#: Xml.xml:201
#, no-c-format
msgid ""
"<![CDATA[<component name=\"hello\">\n"
"    <property name=\"name\">#{user.name}</property>\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"hello\">\n"
"    <property name=\"name\">#{user.name}</property>\n"
"</component>]]>"

#. Tag: para
#: Xml.xml:203
#, no-c-format
msgid "In the second option, the class name is implied by the file in which the component definition appears."
msgstr "Nella seconda opzione, il nome della classe è implicito nel file in cui appare la definizione del componente."

#. Tag: para
#: Xml.xml:208
#, no-c-format
msgid "Alternatively, you may put configuration for all classes in the <literal>com.helloworld</literal> package in <literal>com/helloworld/components.xml</literal>."
msgstr "In alternativa, si può mettere una configurazione per tutte le classi nel pacchetto  <literal>com.helloworld</literal> in <literal>com/helloworld/components.xml</literal>."

#. Tag: title
#: Xml.xml:215
#, no-c-format
msgid "Configurable property types"
msgstr "Tipi di proprietà configurabili"

#. Tag: para
#: Xml.xml:216
#, no-c-format
msgid "Properties of string, primitive or primitive wrapper type may be configured just as you would expect:"
msgstr "Le proprietà dei tipi stringa, primitivi o wrapper primitivi possono essere configurati solo come atteso:"

#. Tag: programlisting
#: Xml.xml:220
#, no-c-format
msgid "<![CDATA[org.jboss.seam.core.manager.conversationTimeout 60000]]>"
msgstr "<![CDATA[org.jboss.seam.core.manager.conversationTimeout 60000]]>"

#. Tag: programlisting
#: Xml.xml:222
#, no-c-format
msgid "<![CDATA[<core:manager conversation-timeout=\"60000\"/>]]>"
msgstr "<![CDATA[<core:manager conversation-timeout=\"60000\"/>]]>"

#. Tag: programlisting
#: Xml.xml:224
#, no-c-format
msgid ""
"<![CDATA[<component name=\"org.jboss.seam.core.manager\">\n"
"    <property name=\"conversationTimeout\">60000</property>\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"org.jboss.seam.core.manager\">\n"
"    <property name=\"conversationTimeout\">60000</property>\n"
"</component>]]>"

#. Tag: para
#: Xml.xml:226
#, no-c-format
msgid "Arrays, sets and lists of strings or primitives are also supported:"
msgstr "Anche array, set e liste di stringhe o primitivi sono supportati:"

#. Tag: programlisting
#: Xml.xml:230
#, no-c-format
msgid "<![CDATA[org.jboss.seam.bpm.jbpm.processDefinitions order.jpdl.xml, return.jpdl.xml, inventory.jpdl.xml]]>"
msgstr "<![CDATA[org.jboss.seam.bpm.jbpm.processDefinitions order.jpdl.xml, return.jpdl.xml, inventory.jpdl.xml]]>"

#. Tag: programlisting
#: Xml.xml:232
#, no-c-format
msgid ""
"<![CDATA[<bpm:jbpm>\n"
"    <bpm:process-definitions>\n"
"        <value>order.jpdl.xml</value>\n"
"        <value>return.jpdl.xml</value>\n"
"        <value>inventory.jpdl.xml</value>\n"
"    </bpm:process-definitions>\n"
"</bpm:jbpm>]]>"
msgstr ""
"<![CDATA[<bpm:jbpm>\n"
"    <bpm:process-definitions>\n"
"        <value>order.jpdl.xml</value>\n"
"        <value>return.jpdl.xml</value>\n"
"        <value>inventory.jpdl.xml</value>\n"
"    </bpm:process-definitions>\n"
"</bpm:jbpm>]]>"

#. Tag: programlisting
#: Xml.xml:234
#, no-c-format
msgid ""
"<![CDATA[<component name=\"org.jboss.seam.bpm.jbpm\">\n"
"    <property name=\"processDefinitions\">\n"
"        <value>order.jpdl.xml</value>\n"
"        <value>return.jpdl.xml</value>\n"
"        <value>inventory.jpdl.xml</value>\n"
"    </property>\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"org.jboss.seam.bpm.jbpm\">\n"
"    <property name=\"processDefinitions\">\n"
"        <value>order.jpdl.xml</value>\n"
"        <value>return.jpdl.xml</value>\n"
"        <value>inventory.jpdl.xml</value>\n"
"    </property>\n"
"</component>]]>"

#. Tag: para
#: Xml.xml:236
#, no-c-format
msgid "Even maps with String-valued keys and string or primitive values are supported:"
msgstr "Anche le mappe con chiavi associate a stringhe oppure valori stringa o primitivi sono supportati:"

#. Tag: programlisting
#: Xml.xml:240
#, no-c-format
msgid ""
"<![CDATA[<component name=\"issueEditor\">\n"
"    <property name=\"issueStatuses\">\n"
"        <key>open</key> <value>open issue</value>\n"
"        <key>resolved</key> <value>issue resolved by developer</value>\n"
"        <key>closed</key> <value>resolution accepted by user</value>\n"
"    </property>\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"issueEditor\">\n"
"    <property name=\"issueStatuses\">\n"
"        <key>open</key> <value>open issue</value>\n"
"        <key>resolved</key> <value>issue resolved by developer</value>\n"
"        <key>closed</key> <value>resolution accepted by user</value>\n"
"    </property>\n"
"</component>]]>"

#. Tag: para
#: Xml.xml:242
#, no-c-format
msgid "When configuring multi-valued properties, by default, Seam will preserve the order in which you place the attributes in <literal>components.xml</literal> (unless you use a <literal>SortedSet</literal>/<literal>SortedMap</literal> then Seam will use <literal>TreeMap</literal>/<literal>TreeSet</literal>). If the property has a concrete type (for example <literal>LinkedList</literal>) Seam will use that type."
msgstr "Quando si configurano le proprietà multivalore, Seam preserverà di default l'ordine in cui vengono messi gli attributi in <literal>components.xml</literal> (amenoché venga usato <literal>SortedSet</literal>/<literal>SortedMap</literal> allora Seam userà <literal>TreeMap</literal>/<literal>TreeSet</literal>). Se la proprietà ha un tipo concreto (per esempio <literal>LinkedList</literal>) Seam userà quel tipo."

#. Tag: para
#: Xml.xml:248
#, no-c-format
msgid "You can also override the type by specifying a fully qualified class name:"
msgstr "Si può anche fare l'override del tipo specificando un nome di classe pienamente qualificato:"

#. Tag: programlisting
#: Xml.xml:252
#, no-c-format
msgid ""
"<![CDATA[<component name=\"issueEditor\">\n"
"   <property name=\"issueStatusOptions\" type=\"java.util.LinkedHashMap\">\n"
"      <key>open</key> <value>open issue</value>\n"
"      <key>resolved</key> <value>issue resolved by developer</value>\n"
"      <key>closed</key> <value>resolution accepted by user</value>\n"
"   </property>\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"issueEditor\">\n"
"   <property name=\"issueStatusOptions\" type=\"java.util.LinkedHashMap\">\n"
"      <key>open</key> <value>open issue</value>\n"
"      <key>resolved</key> <value>issue resolved by developer</value>\n"
"      <key>closed</key> <value>resolution accepted by user</value>\n"
"   </property>\n"
"</component>]]>"

#. Tag: para
#: Xml.xml:254
#, no-c-format
msgid "Finally, you may wire together components using a value-binding expression. Note that this is quite different to injection using <literal>@In</literal>, since it happens at component instantiation time instead of invocation time. It is therefore much more similar to the dependency injection facilities offered by traditional IoC containers like JSF or Spring."
msgstr "Infine si può unire assieme i componenti usando un'espressione value-binding. Si noti che è diverso dall'usare l'iniezione con <literal>@In</literal>, poiché avviene al momento dell'istanziamento del componente invece che al momento dell'invocazione. E' quindi molto più simile alle strutture con dependency injection offerte dai tradizionali IoC container come JSF o Spring."

#. Tag: programlisting
#: Xml.xml:262
#, no-c-format
msgid ""
"<![CDATA[<drools:managed-working-memory name=\"policyPricingWorkingMemory\"\n"
"    rule-base=\"#{policyPricingRules}\"/>]]>"
msgstr ""
"<![CDATA[<drools:managed-working-memory name=\"policyPricingWorkingMemory\"\n"
"    rule-base=\"#{policyPricingRules}\"/>]]>"

#. Tag: programlisting
#: Xml.xml:264
#, no-c-format
msgid ""
"<![CDATA[<component name=\"policyPricingWorkingMemory\"\n"
"    class=\"org.jboss.seam.drools.ManagedWorkingMemory\">\n"
"    <property name=\"ruleBase\">#{policyPricingRules}</property>\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"policyPricingWorkingMemory\"\n"
"    class=\"org.jboss.seam.drools.ManagedWorkingMemory\">\n"
"    <property name=\"ruleBase\">#{policyPricingRules}</property>\n"
"</component>]]>"

#. Tag: para
#: Xml.xml:266
#, no-c-format
msgid "Seam also resolves an EL expression string prior to assigning the initial value to the bean property of the component. So you can inject some contextual data into your components."
msgstr "Seam risolve anche un'espressione stringa EL prima di assegnare il valore iniziale alla proprietà del bean del componente. Quindi si possono iniettare alcuni dati di contesto nei componenti."

#. Tag: programlisting
#: Xml.xml:271
#, no-c-format
msgid ""
"<![CDATA[<component name=\"greeter\" class=\"com.example.action.Greeter\">\n"
"    <property name=\"message\">Nice to see you, #{identity.username}!</property>\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"greeter\" class=\"com.example.action.Greeter\">\n"
"    <property name=\"message\">Nice to see you, #{identity.username}!</property>\n"
"</component>]]>"

#. Tag: para
#: Xml.xml:273
#, no-c-format
msgid "However, there is one important exception. If the type of the property to which the initial value is being assigned is either a Seam <literal>ValueExpression</literal> or <literal>MethodExpression</literal>, then the evaluation of the EL is deferred. Instead, the appropriate expression wrapper is created and assigned to the property. The message templates on the Home component from the Seam Application Framework serve as an example."
msgstr "C'è un'importante eccezione. Se un tipo di proprietà a cui il valore iniziale assegnato è o una <literal>ValueExpression</literal> di Seam o una <literal>MethodExpression</literal>, allora la valutazione di EL è rimandata. Invece il wrapper dell'espressione appropriata viene creato e assegnato alla proprietà. I modelli di messaggi nel componente Home dell'Applicazione Framework di Seam servono da esempio."

#. Tag: programlisting
#: Xml.xml:281
#, no-c-format
msgid ""
"<![CDATA[<framework:entity-home name=\"myEntityHome\"\n"
"    class=\"com.example.action.MyEntityHome\" entity-class=\"com.example.model.MyEntity\"\n"
"    created-message=\"'#{myEntityHome.instance.name}' has been successfully added.\"/>]]>"
msgstr ""
"<![CDATA[<framework:entity-home name=\"myEntityHome\"\n"
"    class=\"com.example.action.MyEntityHome\" entity-class=\"com.example.model.MyEntity\"\n"
"    created-message=\"'#{myEntityHome.instance.name}' has been successfully added.\"/>]]>"

#. Tag: para
#: Xml.xml:283
#, no-c-format
msgid "Inside the component, you can access the expression string by calling <literal>getExpressionString()</literal> on the <literal>ValueExpression</literal> or <literal>MethodExpression</literal>. If the property is a <literal>ValueExpression</literal>, you can resolve the value using <literal>getValue()</literal> and if the property is a <literal>MethodExpression</literal>, you can invoke the method using <literal>invoke(Object args...)</literal>. Obviously, to assign a value to a <literal>MethodExpression</literal> property, the entire initial value must be a single EL expression."
msgstr "Dentro il componente si può accedere all'espressione di stringa chiamando <literal>getExpressionString()</literal> sulla <literal>ValueExpression</literal> o <literal>MethodExpression</literal>. Se la proprietà è una <literal>ValueExpression</literal>, si può risolvere il valore usando <literal>getValue()</literal> e se la proprietà è un <literal>MethodExpression</literal>, si può invocare il metodo usando <literal>invoke(Object args...)</literal>. Ovviamente per assegnare un valore alla proprietà <literal>MethodExpression</literal>, l'intero valore iniziale deve essere una singola espressione EL."

#. Tag: title
#: Xml.xml:296
#, no-c-format
msgid "Using XML Namespaces"
msgstr "Uso dei namespace XML"

#. Tag: para
#: Xml.xml:297
#, no-c-format
msgid "Throughout the examples, there have been two competing ways of declaring components: with and without the use of XML namespaces. The following shows a typical <literal>components.xml</literal> file without namespaces:"
msgstr "Attraverso gli esempi ci sono stati due modi per dichiarare i componenti: con e senza l'uso di namespace XML. Il seguente mostra un tipico file <literal>components.xml</literal> senza namespace:"

#. Tag: programlisting
#: Xml.xml:303
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<components xmlns=\"http://jboss.org/schema/seam/components\"\n"
"            xsi:schemaLocation=\"http://jboss.org/schema/seam/components http://jboss.org/schema/seam/components-2.3.xsd\">\n"
"\n"
"    <component class=\"org.jboss.seam.core.init\">\n"
"        <property name=\"debug\">true</property>\n"
"        <property name=\"jndiPattern\">@jndiPattern@</property>\n"
"    </component>\n"
"    \n"
"</components>]]>"
msgstr ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<components xmlns=\"http://jboss.org/schema/seam/components\"\n"
"            xsi:schemaLocation=\"http://jboss.org/schema/seam/components http://jboss.org/schema/seam/components-2.3.xsd\">\n"
"\n"
"    <component class=\"org.jboss.seam.core.init\">\n"
"        <property name=\"debug\">true</property>\n"
"        <property name=\"jndiPattern\">@jndiPattern@</property>\n"
"    </component>\n"
"    \n"
"</components>]]>"

#. Tag: para
#: Xml.xml:305
#, no-c-format
msgid "As you can see, this is somewhat verbose. Even worse, the component and attribute names cannot be validated at development time."
msgstr "Come si può vedere, è abbastanza prolisso. Ancor peggio, i nomi del componente e dell'attributo non possono essere validati a development time."

#. Tag: para
#: Xml.xml:310
#, no-c-format
msgid "The namespaced version looks like this:"
msgstr "La versione con namespace appare come:"

#. Tag: programlisting
#: Xml.xml:312
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<components xmlns=\"http://jboss.org/schema/seam/components\"\n"
"            xmlns:core=\"http://jboss.org/schema/seam/core\"\n"
"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"            xsi:schemaLocation=\n"
"                \"http://jboss.org/schema/seam/core http://jboss.org/schema/seam/core-2.3.xsd \n"
"                 http://jboss.org/schema/seam/components http://jboss.org/schema/seam/components-2.3.xsd\">\n"
"\n"
"    <core:init debug=\"true\" jndi-pattern=\"@jndiPattern@\"/>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<components xmlns=\"http://jboss.org/schema/seam/components\"\n"
"            xmlns:core=\"http://jboss.org/schema/seam/core\"\n"
"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"            xsi:schemaLocation=\n"
"                \"http://jboss.org/schema/seam/core http://jboss.org/schema/seam/core-2.3.xsd \n"
"                 http://jboss.org/schema/seam/components http://jboss.org/schema/seam/components-2.3.xsd\">\n"
"\n"
"    <core:init debug=\"true\" jndi-pattern=\"@jndiPattern@\"/>\n"
"\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:314
#, no-c-format
msgid "Even though the schema declarations are verbose, the actual XML content is lean and easy to understand. The schemas provide detailed information about each component and the attributes available, allowing XML editors to offer intelligent autocomplete. The use of namespaced elements makes generating and maintaining correct <literal>components.xml</literal> files much simpler."
msgstr "Anche se le dichiarazioni di schema sono lunghe, il contenuto vero di XML è piatto e facile da capire. Gli schemi forniscono informazioni dettagliate su ogni componente e sugli attributi disponibili, consentendo agli editor XML di offrire un autocompletamento intelligente. L'uso di elementi con namespace semplifica molto la generazione ed il mantenimento in uno stato corretto dei file <literal>components.xml</literal>."

#. Tag: para
#: Xml.xml:321
#, no-c-format
msgid "Now, this works great for the built-in Seam components, but what about user components? There are two options. First, Seam supports mixing the two models, allowing the use of the generic <literal>&lt;component&gt;</literal> declarations for user components, along with namespaced declarations for built-in components. But even better, Seam allows you to quickly declare namespaces for your own components."
msgstr "Questo funziona bene per i componenti predefiniti di Seam, ma per i componenti creati dall'utente? Ci sono due opzioni. La prima, Seam supporta un misto dei due modelli, consentendo l'uso delle dichiarazioni generiche <literal>&lt;component&gt;</literal> per i componenti utente, assieme alle dichiarazioni con namespace dei componenti predefiniti. Ma ancor meglio, Seam consente di dichiarare in modo veloce i namespace per i propri componenti."

#. Tag: para
#: Xml.xml:328
#, no-c-format
msgid "Any Java package can be associated with an XML namespace by annotating the package with the <literal>@Namespace</literal> annotation. (Package-level annotations are declared in a file named <literal>package-info.java</literal> in the package directory.) Here is an example from the seampay demo:"
msgstr "Qualsiasi pacchetto Java può essere associato ad un namespace XML annotando il pacchetto con l'annotazione <literal>@Namespace</literal>. (Le annotazioni a livello pacchetto vengono dichiarate in un file chiamato <literal>package-info.java</literal> nella directory del pacchetto.) Ecco un esempio tratto dalla demo seampay:"

#. Tag: programlisting
#: Xml.xml:334
#, no-c-format
msgid ""
"@Namespace(value=\"http://jboss.org/schema/seam/examples/seampay\")\n"
"package org.jboss.seam.example.seampay;\n"
"\n"
"import org.jboss.seam.annotations.Namespace;"
msgstr ""
"@Namespace(value=\"http://jboss.org/schema/seam/examples/seampay\")\n"
"package org.jboss.seam.example.seampay;\n"
"\n"
"import org.jboss.seam.annotations.Namespace;"

#. Tag: para
#: Xml.xml:336
#, no-c-format
msgid "That is all you need to do to use the namespaced style in <literal>components.xml</literal>! Now we can write:"
msgstr "Questo è tutto ciò che bisogna fare per utilizzare lo stile namespace in <literal>components.xml</literal>! Adesso si può scrivere:"

#. Tag: programlisting
#: Xml.xml:341
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\"\n"
"            xmlns:pay=\"http://jboss.org/schema/seam/examples/seampay\"\n"
"            ... >\n"
"\n"
"    <pay:payment-home new-instance=\"#{newPayment}\"\n"
"                      created-message=\"Created a new payment to #{newPayment.payee}\" />\n"
"\n"
"    <pay:payment name=\"newPayment\"\n"
"                 payee=\"Somebody\"\n"
"                 account=\"#{selectedAccount}\"\n"
"                 payment-date=\"#{currentDatetime}\"\n"
"                 created-date=\"#{currentDatetime}\" />\n"
"     ...\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\"\n"
"            xmlns:pay=\"http://jboss.org/schema/seam/examples/seampay\"\n"
"            ... >\n"
"\n"
"    <pay:payment-home new-instance=\"#{newPayment}\"\n"
"                      created-message=\"Created a new payment to #{newPayment.payee}\" />\n"
"\n"
"    <pay:payment name=\"newPayment\"\n"
"                 payee=\"Somebody\"\n"
"                 account=\"#{selectedAccount}\"\n"
"                 payment-date=\"#{currentDatetime}\"\n"
"                 created-date=\"#{currentDatetime}\" />\n"
"     ...\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:343
#, no-c-format
msgid "<para>Or:</para>"
msgstr "<para>Oppure:</para>"

#. Tag: programlisting
#: Xml.xml:345
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\"\n"
"            xmlns:pay=\"http://jboss.org/schema/seam/examples/seampay\"\n"
"            ... >\n"
"\n"
"    <pay:payment-home>\n"
"        <pay:new-instance>\"#{newPayment}\"</pay:new-instance>\n"
"        <pay:created-message>Created a new payment to #{newPayment.payee}</pay:created-message>\n"
"    </pay:payment-home>\n"
"    \n"
"    <pay:payment name=\"newPayment\">\n"
"        <pay:payee>Somebody\"</pay:payee>\n"
"        <pay:account>#{selectedAccount}</pay:account>\n"
"        <pay:payment-date>#{currentDatetime}</pay:payment-date>\n"
"        <pay:created-date>#{currentDatetime}</pay:created-date>\n"
"     </pay:payment>\n"
"     ...\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.org/schema/seam/components\"\n"
"            xmlns:pay=\"http://jboss.org/schema/seam/examples/seampay\"\n"
"            ... >\n"
"\n"
"    <pay:payment-home>\n"
"        <pay:new-instance>\"#{newPayment}\"</pay:new-instance>\n"
"        <pay:created-message>Created a new payment to #{newPayment.payee}</pay:created-message>\n"
"    </pay:payment-home>\n"
"    \n"
"    <pay:payment name=\"newPayment\">\n"
"        <pay:payee>Somebody\"</pay:payee>\n"
"        <pay:account>#{selectedAccount}</pay:account>\n"
"        <pay:payment-date>#{currentDatetime}</pay:payment-date>\n"
"        <pay:created-date>#{currentDatetime}</pay:created-date>\n"
"     </pay:payment>\n"
"     ...\n"
"</components>]]>"

#. Tag: para
#: Xml.xml:347
#, no-c-format
msgid "These examples illustrate the two usage models of a namespaced element. In the first declaration, the <literal>&lt;pay:payment-home&gt;</literal> references the <literal>paymentHome</literal> component:"
msgstr "Questi esempi illustrano i due usi modi d'uso di un elemento con namespace. Nella prima dichiarazione, <literal>&lt;pay:payment-home&gt;</literal> referenzia il componente <literal>paymentHome</literal>:"

#. Tag: programlisting
#: Xml.xml:353
#, no-c-format
msgid ""
"<![CDATA[package org.jboss.seam.example.seampay;\n"
"...\n"
"@Name(\"paymentHome\")\n"
"public class PaymentController\n"
"    extends EntityHome<Payment>\n"
"{\n"
"    ... \n"
"}]]>"
msgstr ""
"<![CDATA[package org.jboss.seam.example.seampay;\n"
"...\n"
"@Name(\"paymentHome\")\n"
"public class PaymentController\n"
"    extends EntityHome<Payment>\n"
"{\n"
"    ... \n"
"}]]>"

# hyphenated = ?
#. Tag: para
#: Xml.xml:355
#, no-c-format
msgid "The element name is the hyphenated form of the component name. The attributes of the element are the hyphenated form of the property names."
msgstr "Il nome dell'elemento è una forma con trattino d'unione del nome del componente. Gli attributi dell'elemento sono la forma con trattino dei nomi delle proprietà. "

#. Tag: para
#: Xml.xml:360
#, no-c-format
msgid "In the second declaration, the <literal>&lt;pay:payment&gt;</literal> element refers to the <literal>Payment</literal> class in the <literal>org.jboss.seam.example.seampay</literal> package. In this case <literal>Payment</literal> is an entity that is being declared as a Seam component:"
msgstr "Nella seconda dichiarazione, l'elemento <literal>&lt;pay:payment&gt;</literal> fa riferimento alla classe <literal>Payment</literal> nel pacchetto <literal>org.jboss.seam.example.seampay</literal>. In questo caso <literal>Payment</literal> è un entity dichiarato come componente Seam:"

#. Tag: programlisting
#: Xml.xml:366
#, no-c-format
msgid ""
"<![CDATA[package org.jboss.seam.example.seampay;\n"
"...\n"
"@Entity\n"
"public class Payment\n"
"    implements Serializable\n"
"{\n"
"    ...\n"
"}]]>"
msgstr ""
"<![CDATA[package org.jboss.seam.example.seampay;\n"
"...\n"
"@Name(\"paymentHome\")\n"
"public class PaymentController\n"
"    extends EntityHome<Payment>\n"
"{\n"
"    ... \n"
"}]]>"

#. Tag: para
#: Xml.xml:368
#, no-c-format
msgid "If we want validation and autocompletion to work for user-defined components, we will need a schema. Seam does not yet provide a mechanism to automatically generate a schema for a set of components, so it is necessary to generate one manually. The schema definitions for the standard Seam packages can be used for guidance."
msgstr "Se si vuole far funzionare la validazione e l'autocompletamento per i componenti definiti dall'utente, occorre uno schema. Seam non fornisce ancora un meccanismo per generare automaticamente uno schema per un set di componenti, così è necessario generarne uno manualmente. Come guida d'esempio si possono usare le definizioni di schema dei pacchetti standard di Seam."

#. Tag: para
#: Xml.xml:375
#, no-c-format
msgid "The following are the the namespaces used by Seam:"
msgstr "Seam utilizza i seguenti namespace:"

#. Tag: para
#: Xml.xml:379
#, no-c-format
msgid "components &#8212; <literal>http://jboss.org/schema/seam/components</literal>"
msgstr "components &#8212; <literal>http://jboss.org/schema/seam/components</literal>"

#. Tag: para
#: Xml.xml:382
#, no-c-format
msgid "core &#8212; <literal>http://jboss.org/schema/seam/core</literal>"
msgstr "core &#8212; <literal>http://jboss.org/schema/seam/core</literal>"

#. Tag: para
#: Xml.xml:385
#, no-c-format
msgid "drools &#8212; <literal>http://jboss.org/schema/seam/drools</literal>"
msgstr "drools &#8212; <literal>http://jboss.org/schema/seam/drools</literal>"

#. Tag: para
#: Xml.xml:388
#, no-c-format
msgid "framework &#8212; <literal>http://jboss.org/schema/seam/framework</literal>"
msgstr "framework &#8212; <literal>http://jboss.org/schema/seam/framework</literal>"

#. Tag: para
#: Xml.xml:391
#, no-c-format
msgid "jms &#8212; <literal>http://jboss.org/schema/seam/jms</literal>"
msgstr "jms &#8212; <literal>http://jboss.org/schema/seam/jms</literal>"

#. Tag: para
#: Xml.xml:394
#, no-c-format
msgid "remoting &#8212; <literal>http://jboss.org/schema/seam/remoting</literal>"
msgstr "remoting &#8212; <literal>http://jboss.org/schema/seam/remoting</literal>"

#. Tag: para
#: Xml.xml:397
#, no-c-format
msgid "theme &#8212; <literal>http://jboss.org/schema/seam/theme</literal>"
msgstr "theme &#8212; <literal>http://jboss.org/schema/seam/theme</literal>"

#. Tag: para
#: Xml.xml:400
#, no-c-format
msgid "security &#8212; <literal>http://jboss.org/schema/seam/security</literal>"
msgstr "security &#8212; <literal>http://jboss.org/schema/seam/security</literal>"

#. Tag: para
#: Xml.xml:403
#, no-c-format
msgid "mail &#8212; <literal>http://jboss.org/schema/seam/mail</literal>"
msgstr "mail &#8212; <literal>http://jboss.org/schema/seam/mail</literal>"

#. Tag: para
#: Xml.xml:406
#, no-c-format
msgid "web &#8212; <literal>http://jboss.org/schema/seam/web</literal>"
msgstr "web &#8212; <literal>http://jboss.org/schema/seam/web</literal>"

#. Tag: para
#: Xml.xml:409
#, no-c-format
msgid "pdf &#8212; <literal>http://jboss.org/schema/seam/pdf</literal>"
msgstr "pdf &#8212; <literal>http://jboss.org/schema/seam/pdf</literal>"

#. Tag: para
#: Xml.xml:412
#, no-c-format
msgid "spring &#8212; <literal>http://jboss.org/schema/seam/spring</literal>"
msgstr "spring &#8212; <literal>http://jboss.org/schema/seam/spring</literal>"

