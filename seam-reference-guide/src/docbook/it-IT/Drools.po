# Language it-IT translations for PACKAGE package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2009-06-19 04:37+0000\n"
"PO-Revision-Date: 2009-06-19 06:50+0100\n"
"Last-Translator: Nicola Benaglia <nico.benaz@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: Drools.xml:5
#, no-c-format
msgid "Seam and JBoss Rules"
msgstr "Seam e JBoss Rules"

#. Tag: para
#: Drools.xml:7
#, no-c-format
msgid "Seam makes it easy to call JBoss Rules (Drools) rulebases from Seam components or jBPM process definitions."
msgstr "Seam facilita le chiamate alle regole di JBoss Rules (Drools) dai componenti Seam o dalle definizioni di processo jBPM."

#. Tag: title
#: Drools.xml:13
#, no-c-format
msgid "Installing rules"
msgstr "Installazione delle regole"

#. Tag: para
#: Drools.xml:15
#, no-c-format
msgid "The first step is to make an instance of <literal>org.drools.RuleBase</literal> available in a Seam context variable. For testing purposes, Seam provides a built-in component that compiles a static set of rules from the classpath. You can install this component via <literal>components.xml</literal>:"
msgstr "Il primo passo è creare un'istanza di <literal>org.drools.RuleBase</literal> disponibile in una variabile del contesto di Seam. Per i test Seam fornisce un componente interno che compila un set statico di regole dal classpath. Si può installare questo componente tramite <literal>components.xml</literal>:"

#. Tag: programlisting
#: Drools.xml:22
#, no-c-format
msgid ""
"<![CDATA[<drools:rule-base name=\"policyPricingRules\">\n"
"    <drools:rule-files>\n"
"        <value>policyPricingRules.drl</value>\n"
"    </drools:rule-files>\n"
"</drools:rule-base>]]>"
msgstr ""
"<![CDATA[<drools:rule-base name=\"policyPricingRules\">\n"
"    <drools:rule-files>\n"
"        <value>policyPricingRules.drl</value>\n"
"    </drools:rule-files>\n"
"</drools:rule-base>]]>"

#. Tag: para
#: Drools.xml:24
#, no-c-format
msgid "This component compiles rules from a set of DRL (<literal>.drl</literal>) or decision table (<literal>.xls</literal>) files and caches an instance of <literal>org.drools.RuleBase</literal> in the Seam <literal>APPLICATION</literal> context. Note that it is quite likely that you will need to install multiple rule bases in a rule-driven application."
msgstr "Questo componente compila le regole da un set di file DRL (<literal>.drl</literal>) o tabelle di decisione (<literal>.xls</literal>)  e mette in cache un'istanza di <literal>org.drools.RuleBase</literal> nel contesto <literal>APPLICATION</literal> di Seam. Notare che è abbastanza probabile che in un'applicazione guidata dalle regole occorra installare altre basi di regole."

#. Tag: para
#: Drools.xml:32
#, no-c-format
msgid "If you want to use a Drools DSL, you alse need to specify the DSL definition:"
msgstr "Se si vuole utilizzare una Drool DSL, devi specificare la definizione DSL:"

#. Tag: programlisting
#: Drools.xml:37
#, no-c-format
msgid ""
"<![CDATA[<drools:rule-base name=\"policyPricingRules\" dsl-file=\"policyPricing.dsl\">\n"
"    <drools:rule-files>\n"
"        <value>policyPricingRules.drl</value>\n"
"    </drools:rule-files>\n"
"</drools:rule-base>]]>"
msgstr ""
"<![CDATA[<drools:rule-base name=\"policyPricingRules\" dsl-file=\"policyPricing.dsl\">\n"
"    <drools:rule-files>\n"
"        <value>policyPricingRules.drl</value>\n"
"    </drools:rule-files>\n"
"</drools:rule-base>]]>"

#. Tag: para
#: Drools.xml:39
#, no-c-format
msgid "Support for Drools RuleFlow is also available and you can simply add a <literal>.rf</literal> or a <literal>.rfm</literal> as part of your rule files as:"
msgstr "E' disponibile il supporto a Drools RuleFlow ed è possibile aggiungere un <literal>.rf</literal> o <literal>.rfm</literal> come parte dei file delle regole:"

#. Tag: programlisting
#: Drools.xml:44
#, no-c-format
msgid ""
"<![CDATA[\n"
"        <drools:rule-base name=\"policyPricingRules\" rule-files=\"policyPricingRules.drl, policyPricingRulesFlow.rf\"/>\n"
"        ]]>"
msgstr ""
"<![CDATA[\n"
"        <drools:rule-base name=\"policyPricingRules\" rule-files=\"policyPricingRules.drl, policyPricingRulesFlow.rf\"/>\n"
"        ]]>"

#. Tag: para
#: Drools.xml:46
#, no-c-format
msgid "Note that when using the Drools 4.x RuleFlow (<literal>.rfm</literal>) format, you need to specify the -Ddrools.ruleflow.port=true system property on server startup. This is however still an experimental feature and we advise to use the Drools5 (<literal>.rf</literal>) format if possible."
msgstr "Si noti che quando si usa il formato Drools 4.x RuleFlow (<literal>.rfm</literal>) occorre specificare la proprietà di sistema -Ddrools.ruleflow.port=true all'avvio del server. Questa è una funzionalità sperimentale e si consiglia l'uso del formato Drools5 (<literal>.rf</literal>) se possibile."

#. Tag: para
#: Drools.xml:52
#, no-c-format
msgid "If you want to register a custom consequence exception handler through the RuleBaseConfiguration, you need to write the handler, for example:"
msgstr "Se si vuole registrare un handler personalizzato per le eccezioni tramite RuleBaseConfiguration, occorre scrivere l'handler, per esempio:"

#. Tag: programlisting
#: Drools.xml:57
#, no-c-format
msgid ""
"<![CDATA[@Scope(ScopeType.APPLICATION)\n"
"@Startup\n"
"@Name(\"myConsequenceExceptionHandler\")\n"
"public class MyConsequenceExceptionHandler implements ConsequenceExceptionHandler, Externalizable {\n"
"\n"
"   public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n"
"   }\n"
"\n"
"   public void writeExternal(ObjectOutput out) throws IOException {\n"
"   }\n"
"\n"
"   public void handleException(Activation activation,\n"
"                               WorkingMemory workingMemory,\n"
"                               Exception exception) {\n"
"       throw new ConsequenceException( exception,\n"
"                                       activation.getRule() );\n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@Scope(ScopeType.APPLICATION)\n"
"@Startup\n"
"@Name(\"myConsequenceExceptionHandler\")\n"
"public class MyConsequenceExceptionHandler implements ConsequenceExceptionHandler, Externalizable {\n"
"\n"
"   public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n"
"   }\n"
"\n"
"   public void writeExternal(ObjectOutput out) throws IOException {\n"
"   }\n"
"\n"
"   public void handleException(Activation activation,\n"
"                               WorkingMemory workingMemory,\n"
"                               Exception exception) {\n"
"       throw new ConsequenceException( exception,\n"
"                                       activation.getRule() );\n"
"   }\n"
"\n"
"}]]>"

#. Tag: para
#: Drools.xml:59
#, no-c-format
msgid "and register it:"
msgstr "e registrarlo:"

#. Tag: programlisting
#: Drools.xml:62
#, no-c-format
msgid ""
"<![CDATA[<drools:rule-base name=\"policyPricingRules\" dsl-file=\"policyPricing.dsl\" consequence-exception-handler=\"#{myConsequenceExceptionHandler}\">\n"
"    <drools:rule-files>\n"
"        <value>policyPricingRules.drl</value>\n"
"    </drools:rule-files>\n"
"</drools:rule-base>]]>"
msgstr ""
"<![CDATA[<drools:rule-base name=\"policyPricingRules\" dsl-file=\"policyPricing.dsl\" consequence-exception-handler=\"#{myConsequenceExceptionHandler}\">\n"
"    <drools:rule-files>\n"
"        <value>policyPricingRules.drl</value>\n"
"    </drools:rule-files>\n"
"</drools:rule-base>]]>"

#. Tag: para
#: Drools.xml:64
#, no-c-format
msgid "In most rules-driven applications, rules need to be dynamically deployable, so a production application will want to use a Drools RuleAgent to manage the RuleBase. The RuleAgent can connect to a Drools rule server (BRMS) or hot deploy rules packages from a local file repository. The RulesAgent-managed RuleBase is also configurable in <literal>components.xml</literal>:"
msgstr "Nella maggior parte delle applicazioni guidate dalle regole, le regole devono essere dinamicamente deployabili, e quindi un'applicazione in produzione dovrà usare un Drools RuleAgent per gestire la RuleBase. Il RuleAgent può connettersi al server di regole Drool (BRMS) od eseguire l'hot deploy dei pacchetti di regole dal repository locale. La RuleBase gestita dal RulesAgen è configurabile in <literal>components.xml</literal>:"

#. Tag: programlisting
#: Drools.xml:72
#, no-c-format
msgid ""
"<![CDATA[<drools:rule-agent name=\"insuranceRules\" \n"
"                    configurationFile=\"/WEB-INF/deployedrules.properties\" />]]>"
msgstr ""
"<![CDATA[<drools:rule-agent name=\"insuranceRules\" \n"
"                    configurationFile=\"/WEB-INF/deployedrules.properties\" />]]>"

#. Tag: para
#: Drools.xml:74
#, no-c-format
msgid "The properties file contains properties specific to the RulesAgent. Here is an example configuration file from the Drools example distribution."
msgstr "Il file delle proprietà contiene proprietà specifiche per RulesAgent. Ecco un file di configurazione d'esempio proveniente dalla distribuzione Drools."

#. Tag: programlisting
#: Drools.xml:77
#, no-c-format
msgid ""
"newInstance=true\n"
"url=http://localhost:8080/drools-jbrms/org.drools.brms.JBRMS/package/org.acme.insurance/fmeyer\n"
"localCacheDir=/Users/fernandomeyer/projects/jbossrules/drools-examples/drools-examples-brms/cache\n"
"poll=30\n"
"name=insuranceconfig"
msgstr ""
"newInstance=true\n"
"url=http://localhost:8080/drools-jbrms/org.drools.brms.JBRMS/package/org.acme.insurance/fmeyer\n"
"localCacheDir=/Users/fernandomeyer/projects/jbossrules/drools-examples/drools-examples-brms/cache\n"
"poll=30\n"
"name=insuranceconfig"

#. Tag: para
#: Drools.xml:80
#, no-c-format
msgid "It is also possible to configure the options on the component directly, bypassing the configuration file."
msgstr "E' anche possibile configurare le opzioni derettamente sul componente, bypassando il file di configurazione."

#. Tag: programlisting
#: Drools.xml:82
#, no-c-format
msgid ""
"<![CDATA[<drools:rule-agent name=\"insuranceRules\"\n"
"   url=\"http://localhost:8080/drools-jbrms/org.drools.brms.JBRMS/package/org.acme.insurance/fmeyer\"\n"
"   local-cache-dir=\"/Users/fernandomeyer/projects/jbossrules/drools-examples/drools-examples-brms/cache\"\n"
"   poll=\"30\"\n"
"   configuration-name=\"insuranceconfig\" />]]>"
msgstr ""
"<![CDATA[<drools:rule-agent name=\"insuranceRules\"\n"
"   url=\"http://localhost:8080/drools-jbrms/org.drools.brms.JBRMS/package/org.acme.insurance/fmeyer\"\n"
"   local-cache-dir=\"/Users/fernandomeyer/projects/jbossrules/drools-examples/drools-examples-brms/cache\"\n"
"   poll=\"30\"\n"
"   configuration-name=\"insuranceconfig\" />]]>"

#. Tag: para
#: Drools.xml:84
#, no-c-format
msgid "Next, we need to make an instance of <literal>org.drools.WorkingMemory</literal> available to each conversation. (Each <literal>WorkingMemory</literal> accumulates facts relating to the current conversation.)"
msgstr "Successivamente occorre rendere disponibile ad ogni conversazione un'istanza di <literal>org.drools.WorkingMemory</literal>. (Ogni <literal>WorkingMemory</literal> accumula fatti relativi alla conversazione corrente.)"

#. Tag: programlisting
#: Drools.xml:90
#, no-c-format
msgid "<![CDATA[<drools:managed-working-memory name=\"policyPricingWorkingMemory\" auto-create=\"true\" rule-base=\"#{policyPricingRules}\"/>]]>"
msgstr "<![CDATA[<drools:managed-working-memory name=\"policyPricingWorkingMemory\" auto-create=\"true\" rule-base=\"#{policyPricingRules}\"/>]]>"

#. Tag: para
#: Drools.xml:92
#, no-c-format
msgid "Notice that we gave the <literal>policyPricingWorkingMemory</literal> a reference back to our rule base via the <literal>ruleBase</literal> configuration property."
msgstr "Notare che è stato dato a <literal>policyPricingWorkingMemory</literal> un riferimento alla base di regole tramite la proprietà di configurazione <literal>ruleBase</literal>."

#. Tag: para
#: Drools.xml:98
#, no-c-format
msgid "We can also add means to be notified of rule engine events, including rules firing, objects being asserted, etc. by adding event listeners to WorkingMemory."
msgstr "Si può anche aggiungere gli strumenti per essere notificati degli eventi rule engine, inclusi l'avvio delle regole, gli oggetti da asserire, ecc. aggiungendo event listener alla WorkingMemory."

#. Tag: programlisting
#: Drools.xml:103
#, no-c-format
msgid ""
"<![CDATA[<drools:managed-working-memory name=\"policyPricingWorkingMemory\" auto-create=\"true\" rule-base=\"#{policyPricingRules}\">\n"
"        <drools:event-listeners>\n"
"            <value>org.drools.event.DebugWorkingMemoryEventListener</value>\n"
"        <value>org.drools.event.DebugAgendaEventListener</value>\n"
"        </drools:event-listeners>\n"
"</drools:managed-working-memory>]]>"
msgstr ""
"<![CDATA[<drools:managed-working-memory name=\"policyPricingWorkingMemory\" auto-create=\"true\" rule-base=\"#{policyPricingRules}\">\n"
"        <drools:event-listeners>\n"
"            <value>org.drools.event.DebugWorkingMemoryEventListener</value>\n"
"        <value>org.drools.event.DebugAgendaEventListener</value>\n"
"        </drools:event-listeners>\n"
"</drools:managed-working-memory>]]>"

#. Tag: title
#: Drools.xml:107
#, no-c-format
msgid "Using rules from a Seam component"
msgstr "Utilizzo delle regole da un componente SEAM"

#. Tag: para
#: Drools.xml:109
#, no-c-format
msgid "We can now inject our <literal>WorkingMemory</literal> into any Seam component, assert facts, and fire rules:"
msgstr "Ora è possibile iniettare la <literal>WorkingMemory</literal> in un qualsiasi componente di Seam, asserire i fatti e lanciare le regole:"

#. Tag: programlisting
#: Drools.xml:114
#, no-c-format
msgid ""
"<![CDATA[@In WorkingMemory policyPricingWorkingMemory;\n"
"\n"
"@In Policy policy;\n"
"@In Customer customer;\n"
"\n"
"public void pricePolicy() throws FactException\n"
"{\n"
"        policyPricingWorkingMemory.insert(policy);\n"
"        policyPricingWorkingMemory.insert(customer); \n"
"        // if we have a ruleflow, start the process\n"
"        policyPricingWorkingMemory.startProcess(startProcessId)\n"
"    policyPricingWorkingMemory.fireAllRules();\n"
"}]]>"
msgstr ""
"<![CDATA[@In WorkingMemory policyPricingWorkingMemory;\n"
"\n"
"@In Policy policy;\n"
"@In Customer customer;\n"
"\n"
"public void pricePolicy() throws FactException\n"
"{\n"
"        policyPricingWorkingMemory.insert(policy);\n"
"        policyPricingWorkingMemory.insert(customer); \n"
"        // if we have a ruleflow, start the process\n"
"        policyPricingWorkingMemory.startProcess(startProcessId)\n"
"    policyPricingWorkingMemory.fireAllRules();\n"
"}]]>"

#. Tag: title
#: Drools.xml:119
#, no-c-format
msgid "Using rules from a jBPM process definition"
msgstr "Utilizzo delle regole da una definizione di processo jBPM"

#. Tag: para
#: Drools.xml:121
#, no-c-format
msgid "You can even allow a rule base to act as a jBPM action handler, decision handler, or assignment handler &#8212; in either a pageflow or business process definition."
msgstr "Si può anche consentire alla base di regole di agire come action handler di jBPM, decision handler, o assignment handler &#8212; sia in una definizione di pageflow sia in un processo di business."

#. Tag: programlisting
#: Drools.xml:127
#, no-c-format
msgid ""
"<![CDATA[<decision name=\"approval\">\n"
"         \n"
"    <handler class=\"org.jboss.seam.drools.DroolsDecisionHandler\">\n"
"        <workingMemoryName>orderApprovalRulesWorkingMemory</workingMemoryName>\n"
"        <!-- if a ruleflow was added -->\n"
"        <startProcessId>approvalruleflowid</startProcessId>\n"
"        <assertObjects>\n"
"            <element>#{customer}</element>\n"
"            <element>#{order}</element>\n"
"            <element>#{order.lineItems}</element>\n"
"        </assertObjects>\n"
"    </handler>\n"
"    \n"
"    <transition name=\"approved\" to=\"ship\">\n"
"        <action class=\"org.jboss.seam.drools.DroolsActionHandler\">\n"
"            <workingMemoryName>shippingRulesWorkingMemory</workingMemoryName>\n"
"            <assertObjects>\n"
"                <element>#{customer}</element>\n"
"                <element>#{order}</element>\n"
"                <element>#{order.lineItems}</element>\n"
"            </assertObjects>\n"
"        </action>\n"
"    </transition>\n"
"    \n"
"    <transition name=\"rejected\" to=\"cancelled\"/>\n"
"    \n"
"</decision>]]>"
msgstr ""
"<![CDATA[<decision name=\"approval\">\n"
"         \n"
"    <handler class=\"org.jboss.seam.drools.DroolsDecisionHandler\">\n"
"        <workingMemoryName>orderApprovalRulesWorkingMemory</workingMemoryName>\n"
"        <!-- if a ruleflow was added -->\n"
"        <startProcessId>approvalruleflowid</startProcessId>\n"
"        <assertObjects>\n"
"            <element>#{customer}</element>\n"
"            <element>#{order}</element>\n"
"            <element>#{order.lineItems}</element>\n"
"        </assertObjects>\n"
"    </handler>\n"
"    \n"
"    <transition name=\"approved\" to=\"ship\">\n"
"        <action class=\"org.jboss.seam.drools.DroolsActionHandler\">\n"
"            <workingMemoryName>shippingRulesWorkingMemory</workingMemoryName>\n"
"            <assertObjects>\n"
"                <element>#{customer}</element>\n"
"                <element>#{order}</element>\n"
"                <element>#{order.lineItems}</element>\n"
"            </assertObjects>\n"
"        </action>\n"
"    </transition>\n"
"    \n"
"    <transition name=\"rejected\" to=\"cancelled\"/>\n"
"    \n"
"</decision>]]>"

#. Tag: para
#: Drools.xml:129
#, no-c-format
msgid "The <literal>&lt;assertObjects&gt;</literal> element specifies EL expressions that return an object or collection of objects to be asserted as facts into the <literal>WorkingMemory</literal>."
msgstr "L'elemento <literal>&lt;assertObjects&gt;</literal> specifica le espressioni EL che restituiscono un oggetto od una collezione di oggetti da asserire come fatti nella <literal>WorkingMemory</literal>."

#. Tag: para
#: Drools.xml:135
#, no-c-format
msgid "The <literal>&lt;retractObjects&gt;</literal> element on the other hand specifies EL expressions that return an object or collection of objects to be retracted from the <literal>WorkingMemory</literal>."
msgstr "L'elemento <literal>&lt;retractObjects&gt;</literal> specifica le espressioni EL che restituiscono un oggetto od una collezione di oggetti da Rritrarre dalla <literal>WorkingMemory</literal>."

#. Tag: para
#: Drools.xml:141
#, no-c-format
msgid "There is also support for using Drools for jBPM task assignments:"
msgstr "Esiste anche il supporto per l'uso di Drools per le assegnazioni dei task in jBPM:"

#. Tag: programlisting
#: Drools.xml:145
#, no-c-format
msgid ""
"<![CDATA[<task-node name=\"review\">\n"
"    <task name=\"review\" description=\"Review Order\">\n"
"        <assignment handler=\"org.jboss.seam.drools.DroolsAssignmentHandler\">\n"
"            <workingMemoryName>orderApprovalRulesWorkingMemory</workingMemoryName>\n"
"            <assertObjects>\n"
"                <element>#{actor}</element>\n"
"                <element>#{customer}</element>\n"
"                <element>#{order}</element>\n"
"                <element>#{order.lineItems}</element>\n"
"            </assertObjects>\n"
"        </assignment>\n"
"    </task>\n"
"    <transition name=\"rejected\" to=\"cancelled\"/>\n"
"    <transition name=\"approved\" to=\"approved\"/>\n"
"</task-node>]]>"
msgstr ""
"<![CDATA[<task-node name=\"review\">\n"
"    <task name=\"review\" description=\"Review Order\">\n"
"        <assignment handler=\"org.jboss.seam.drools.DroolsAssignmentHandler\">\n"
"            <workingMemoryName>orderApprovalRulesWorkingMemory</workingMemoryName>\n"
"            <assertObjects>\n"
"                <element>#{actor}</element>\n"
"                <element>#{customer}</element>\n"
"                <element>#{order}</element>\n"
"                <element>#{order.lineItems}</element>\n"
"            </assertObjects>\n"
"        </assignment>\n"
"    </task>\n"
"    <transition name=\"rejected\" to=\"cancelled\"/>\n"
"    <transition name=\"approved\" to=\"approved\"/>\n"
"</task-node>]]>"

# rivedere la frase.
#. Tag: para
#: Drools.xml:147
#, no-c-format
msgid "Certain objects are available to the rules as Drools globals, namely the jBPM <literal>Assignable</literal>, as <literal>assignable</literal> and a Seam <literal>Decision</literal> object, as <literal>decision</literal>. Rules which handle decisions should call <literal>decision.setOutcome(\"result\")</literal> to determine the result of the decision. Rules which perform assignments should set the actor id using the <literal>Assignable</literal>."
msgstr "Alcuni oggetti sono consultabili dalle regole come Drools globals, chiamate <literal>Assignable</literal> in jBPM, come <literal>assignable</literal> ed oggetto <literal>Decision</literal> in Seam, come <literal>decision</literal>. Le regole che gestiscono le decisioni dovrebbero chiamare <literal>decision.setOutcome(\"result\")</literal> per determinare il risultato della decisione. Le regole che eseguono assegnazioni dovrebbero impostare l'actor id usando <literal>Assignable</literal>."

#. Tag: programlisting
#: Drools.xml:156
#, no-c-format
msgid ""
"<![CDATA[package org.jboss.seam.examples.shop\n"
"\n"
"import org.jboss.seam.drools.Decision\n"
"\n"
"global Decision decision\n"
"\n"
"rule \"Approve Order For Loyal Customer\"\n"
"  when\n"
"    Customer( loyaltyStatus == \"GOLD\" )\n"
"    Order( totalAmount <= 10000 )\n"
"  then\n"
"    decision.setOutcome(\"approved\");\n"
"end]]>"
msgstr ""
"<![CDATA[package org.jboss.seam.examples.shop\n"
"\n"
"import org.jboss.seam.drools.Decision\n"
"\n"
"global Decision decision\n"
"\n"
"rule \"Approve Order For Loyal Customer\"\n"
"  when\n"
"    Customer( loyaltyStatus == \"GOLD\" )\n"
"    Order( totalAmount <= 10000 )\n"
"  then\n"
"    decision.setOutcome(\"approved\");\n"
"end]]>"

#. Tag: programlisting
#: Drools.xml:158
#, no-c-format
msgid ""
"<![CDATA[package org.jboss.seam.examples.shop\n"
"\n"
"import org.jbpm.taskmgmt.exe.Assignable\n"
"\n"
"global Assignable assignable\n"
"\n"
"rule \"Assign Review For Small Order\"\n"
"  when\n"
"    Order( totalAmount <= 100 )\n"
"  then\n"
"    assignable.setPooledActors( new String[] {\"reviewers\"} );\n"
"end]]>"
msgstr ""
"<![CDATA[package org.jboss.seam.examples.shop\n"
"\n"
"import org.jbpm.taskmgmt.exe.Assignable\n"
"\n"
"global Assignable assignable\n"
"\n"
"rule \"Assign Review For Small Order\"\n"
"  when\n"
"    Order( totalAmount <= 100 )\n"
"  then\n"
"    assignable.setPooledActors( new String[] {\"reviewers\"} );\n"
"end]]>"

#. Tag: para
#: Drools.xml:161
#, no-c-format
msgid "You can find out more about Drools at <ulink url=\"http://www.drools.org\"></ulink>"
msgstr "Si possono trovare altre informazioni su Drools all'indirizzo <ulink url=\"http://www.drools.org\"></ulink>"

#. Tag: para
#: Drools.xml:168
#, no-c-format
msgid "Seam comes with enough of Drools' dependencies to implement some simple rules. If you want to add extra capabilities to Drools you should download the full distribution and add in extra dependencies as needed."
msgstr "Seam viene fornito con dipendenze Drools sufficienti per implementare alcune regole semplici. Per aggiungere ulteriori funzionalità a Drools occorre scaricare la distribuzione completa ed aggiungere le dipendenze necessarie."

#~ msgid ""
#~ "Drools comes with MVEL compiled for Java 1.4, which is compatible with "
#~ "Java 1.4, Java 5 and Java 6. You may want to change your MVEL jar with "
#~ "one compiled for the version of Java you are using"
#~ msgstr ""
#~ "Drools viene rilasciato con MVEL compilato per Java 1.4, che è "
#~ "compatibile con Java 1.4, Java 5 e Java 6. E' possibile cambiare il jar "
#~ "MVEL con quello compilato per la propria versione di Java."

