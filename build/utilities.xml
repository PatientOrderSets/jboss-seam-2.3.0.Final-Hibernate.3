<?xml version="1.0" encoding="UTF-8"?>
<!-- Ant build file containing utility targets and macrodefs -->

<!-- This file makes use of the following properties:
   version
   patchlevel
   tmp.dir - temporary build area
   -->
<project basedir="." xmlns:artifact="urn:maven-artifact-ant">


    <macrodef name="dependencies">
        <attribute name="id" />
        <attribute name="scope" />
        <attribute name="pom" />
        <element name="nested" implicit="true" optional="true" />
        <sequential>
            <artifact:dependencies pathId="@{scope}.@{id}.path" filesetId="@{scope}.@{id}.fileset" versionsId="@{scope}.@{id}.versions" useScope="@{scope}" settingsFile="${maven.settings.xml}">
                <nested />
                <pom file="@{pom}" settingsFile="${maven.settings.xml}" />
            </artifact:dependencies>
        </sequential>
    </macrodef>
    
    <macrodef name="inlineDependencies">
        <attribute name="id" />
        <attribute name="scope" />
        <element name="inline" implicit="true"/>
        <sequential>
            <artifact:dependencies pathId="@{scope}.@{id}.path" filesetId="@{scope}.@{id}.fileset" versionsId="@{scope}.@{id}.versions" useScope="@{scope}" settingsFile="${maven.settings.xml}">
                <inline />
            </artifact:dependencies>
        </sequential>
    </macrodef>
   
    <!-- Copy dependencies from a given pom/scope to a directory, flattening 
    the directory structure and version information -->
    <macrodef name="copyDependencies">
        <attribute name="id" />
        <attribute name="scope" />
        <attribute name="pom" />
        <attribute name="todir" />
        <sequential>
            <dependencies id="@{id}" scope="@{scope}" pom="@{pom}" />
            <copy todir="@{todir}">
                <fileset refid="@{scope}.@{id}.fileset" />
                <chainedmapper>
                    <mapper classpathref="maven-ant-tasks.classpath" classname="org.apache.maven.artifact.ant.VersionMapper" from="${@{scope}.@{id}.versions}" to="flatten" />
                    <flattenmapper />
                </chainedmapper>
            </copy>
        </sequential>
    </macrodef>
    
    <!-- Copy dependencies from a given pom/scope to a directory, flattening 
        the directory structure and version information -->
    <macrodef name="copyInlineDependencies">
        <attribute name="id" />
        <attribute name="scope" />
        <element name="inline" implicit="true"/>
        <attribute name="todir" />
        <sequential>
            <inlineDependencies id="@{id}" scope="@{scope}">
                <inline />
            </inlineDependencies>
            <copy todir="@{todir}">
                <fileset refid="@{scope}.@{id}.fileset" />
                <chainedmapper>
                    <mapper classpathref="maven-ant-tasks.classpath" classname="org.apache.maven.artifact.ant.VersionMapper" from="${@{scope}.@{id}.versions}" to="flatten" />
                    <flattenmapper />
                </chainedmapper>
            </copy>
        </sequential>
    </macrodef>

    <macrodef name="maven">
        <attribute name="target" />
        <attribute name="basedir" />
        <element name="args" implicit="true" optional="true" />
        <sequential>
            <java classname="org.codehaus.classworlds.Launcher" fork="true" dir="@{basedir}">
                <classpath>
                    <fileset dir="${maven.dir}/boot">
                        <include name="*.jar" />
                    </fileset>
                    <fileset dir="${maven.dir}/bin">
                        <include name="*.*" />
                    </fileset>
                </classpath>
                <sysproperty key="classworlds.conf" value="${maven.dir}/bin/m2.conf" />
                <sysproperty key="maven.home" value="${maven.dir}" />
                <arg line="-Dseam.version=${complete.version}" />
                <arg line="--settings ${maven.settings.xml}" />
                <!--<arg line="-q" />-->
                <args />
                <arg line="@{target}" />
            </java>
        </sequential>
    </macrodef>

</project>
